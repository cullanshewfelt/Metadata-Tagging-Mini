<!DOCTYPE html><html xmlns:cc="http://creativecommons.org/ns#"><head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# medium-com: http://ogp.me/ns/fb/medium-com#"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=contain"><title>A Dummy’s Guide to Redux and Thunk in React – Matt Stow – Medium</title><link rel="canonical" href="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3"><meta name="title" content="A Dummy’s Guide to Redux and Thunk in React – Matt Stow – Medium"><meta name="referrer" content="unsafe-url"><meta name="description" content="If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully this will help. It took me a few attempts at using Redux before…"><meta name="theme-color" content="#000000"><meta property="og:title" content="A Dummy’s Guide to Redux and Thunk in React – Matt Stow – Medium"><meta property="twitter:title" content="A Dummy’s Guide to Redux and Thunk in React – Matt Stow – Medium"><meta property="og:url" content="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3"><meta property="fb:app_id" content="542599432471018"><meta property="og:description" content="If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully…"><meta name="twitter:description" content="If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully…"><link rel="publisher" href="https://plus.google.com/103654360130207659246"><link rel="author" href="https://medium.com/@stowball"><meta property="author" content="Matt Stow"><meta property="og:type" content="article"><meta name="twitter:card" content="summary"><meta property="article:publisher" content="https://www.facebook.com/medium"><meta property="article:author" content="https://medium.com/@stowball"><meta name="robots" content="index, follow"><meta property="article:published_time" content="2016-11-15T07:40:44.091Z"><meta name="twitter:creator" content="@stowball"><meta name="twitter:site" content="@Medium"><meta property="og:site_name" content="Medium"><meta name="twitter:label1" value="Reading time"><meta name="twitter:data1" value="11 min read"><meta name="twitter:app:name:iphone" content="Medium"><meta name="twitter:app:id:iphone" content="828256236"><meta name="twitter:app:url:iphone" content="medium://p/d8904a7005d3"><meta property="al:ios:app_name" content="Medium"><meta property="al:ios:app_store_id" content="828256236"><meta property="al:android:package" content="com.medium.reader"><meta property="al:android:app_name" content="Medium"><meta property="al:ios:url" content="medium://p/d8904a7005d3"><meta property="al:android:url" content="medium://p/d8904a7005d3"><meta property="al:web:url" content="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3"><link rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml" /><link rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/d8904a7005d3" /><script type="application/ld+json">{"@context":"http://schema.org","@type":"NewsArticle","image":{"@type":"ImageObject","width":545,"height":106,"url":"https://cdn-images-1.medium.com/max/545/1*OMF3fSqH8t4xBJ9-6oZDZw.png"},"url":"https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3","dateCreated":"2016-11-15T07:40:44.091Z","datePublished":"2016-11-15T07:40:44.091Z","dateModified":"2018-06-21T05:26:08.023Z","headline":"A Dummy’s Guide to Redux and Thunk in React","name":"A Dummy’s Guide to Redux and Thunk in React","thumbnailUrl":"https://cdn-images-1.medium.com/max/545/1*OMF3fSqH8t4xBJ9-6oZDZw.png","keywords":["Tag:Redux","Tag:React","Tag:JavaScript","Tag:Tutorial","LockedPostSource:0","Elevated:false","LayerCake:0"],"author":{"@type":"Person","name":"Matt Stow","url":"https://medium.com/@stowball"},"creator":["Matt Stow"],"publisher":{"@type":"Organization","name":"Medium","url":"https://medium.com/","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https://cdn-images-1.medium.com/max/308/1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3"}</script><meta name="parsely-link" content="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3"><link rel="stylesheet" type="text/css" class="js-glyph-" id="glyph-8" href="https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m2.css" /><link rel="stylesheet" href="https://cdn-static-1.medium.com/_/fp/css/main-branding-base.2e_rJZ6paVZDCWcIQm41PQ.css"><script>!function(n,e){var t,o,i,c=[],f={passive:!0,capture:!0},r=new Date,a="pointerup",u="pointercancel";function p(n,c){t||(t=c,o=n,i=new Date,w(e),s())}function s(){o>=0&&o<i-r&&(c.forEach(function(n){n(o,t)}),c=[])}function l(t){if(t.cancelable){var o=(t.timeStamp>1e12?new Date:performance.now())-t.timeStamp;"pointerdown"==t.type?function(t,o){function i(){p(t,o),r()}function c(){r()}function r(){e(a,i,f),e(u,c,f)}n(a,i,f),n(u,c,f)}(o,t):p(o,t)}}function w(n){["click","mousedown","keydown","touchstart","pointerdown"].forEach(function(e){n(e,l,f)})}w(n),self.perfMetrics=self.perfMetrics||{},self.perfMetrics.onFirstInputDelay=function(n){c.push(n),s()}}(addEventListener,removeEventListener);</script><script>if (window.top !== window.self) window.top.location = window.self.location.href;var OB_startTime = new Date().getTime(); var OB_loadErrors = []; function _onerror(e) { OB_loadErrors.push(e) }; if (document.addEventListener) document.addEventListener("error", _onerror, true); else if (document.attachEvent) document.attachEvent("onerror", _onerror); function _asyncScript(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("script"); s.type = "text/javascript"; s.async = true; s.src = u; f.parentNode.insertBefore(s, f);}function _asyncStyles(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("link"); s.rel = "stylesheet"; s.href = u; f.parentNode.insertBefore(s, f); return s}(new Image()).src = "/_/stat?event=pixel.load&origin=" + encodeURIComponent(location.origin);</script><script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date; ga("create", "UA-24232453-2", "auto", {"allowLinker": true, "legacyCookieDomain": window.location.hostname}); ga("send", "pageview");</script><script async src="https://www.google-analytics.com/analytics.js"></script><!--[if lt IE 9]><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js"></script><![endif]--><link rel="icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="js-favicon"><link rel="apple-touch-icon" sizes="152x152" href="https://cdn-images-1.medium.com/fit/c/152/152/1*8I-HPL0bfoIzGied-dzOvA.png"><link rel="apple-touch-icon" sizes="120x120" href="https://cdn-images-1.medium.com/fit/c/120/120/1*8I-HPL0bfoIzGied-dzOvA.png"><link rel="apple-touch-icon" sizes="76x76" href="https://cdn-images-1.medium.com/fit/c/76/76/1*8I-HPL0bfoIzGied-dzOvA.png"><link rel="apple-touch-icon" sizes="60x60" href="https://cdn-images-1.medium.com/fit/c/60/60/1*8I-HPL0bfoIzGied-dzOvA.png"><link rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/monogram-mask.KPLCSFEZviQN0jQ7veN2RQ.svg" color="#171717"></head><body itemscope class=" postShowScreen browser-chrome os-mac is-withMagicUnderlines v-glyph v-glyph--m2 is-noJs"><script>document.body.className = document.body.className.replace(/(^|\s)is-noJs(\s|$)/, "$1is-js$2")</script><div class="site-main" id="container"><div class="butterBar butterBar--error"></div><div class="surface"><div id="prerendered" class="screenContent"><canvas class="canvas-renderer"></canvas><div class="container u-maxWidth740 u-xs-margin0 notesPositionContainer js-notesPositionContainer"></div><div class="metabar u-clearfix js-metabar u-boxShadow4px12pxBlackLightest u-fixed u-backgroundTransparentWhiteDarkest u-xs-sizeFullViewportWidth"><div class="branch-journeys-top"></div><div class="js-metabarMiddle metabar-inner u-marginAuto u-maxWidth1032 u-flexCenter u-justifyContentSpaceBetween u-height65 u-xs-height56 u-paddingHorizontal20"><div class="metabar-block u-flex1 u-flexCenter"><div class="u-xs-hide js-metabarLogoLeft"><a href="https://medium.com/" data-log-event="home" class="siteNav-logo u-fillTransparentBlackDarker u-flex0 u-flexCenter u-paddingTop0"><span class="svgIcon svgIcon--logoMonogram svgIcon--45px is-flushLeft u-flex0 u-flexCenter u-paddingTop0"><svg class="svgIcon-use" width="45" height="45" ><path d="M5 40V5h35v35H5zm8.56-12.627c0 .555-.027.687-.318 1.03l-2.457 2.985v.396h6.974v-.396l-2.456-2.985c-.291-.343-.344-.502-.344-1.03V18.42l6.127 13.364h.714l5.256-13.364v10.644c0 .29 0 .342-.185.528l-1.848 1.796v.396h9.19v-.396l-1.822-1.796c-.184-.186-.21-.238-.21-.528V15.937c0-.291.026-.344.21-.528l1.823-1.797v-.396h-6.471l-4.622 11.542-5.203-11.542h-6.79v.396l2.14 2.64c.239.292.291.37.291.768v10.353z"/></svg></span><span class="u-textScreenReader">Homepage</span></a></div><div class="u-xs-show js-metabarLogoLeft"><a href="https://medium.com/" data-log-event="home" class="siteNav-logo u-fillTransparentBlackDarker u-flex0 u-flexCenter u-paddingTop0"><span class="svgIcon svgIcon--logoMonogram svgIcon--45px is-flushLeft u-flex0 u-flexCenter u-paddingTop0"><svg class="svgIcon-use" width="45" height="45" ><path d="M5 40V5h35v35H5zm8.56-12.627c0 .555-.027.687-.318 1.03l-2.457 2.985v.396h6.974v-.396l-2.456-2.985c-.291-.343-.344-.502-.344-1.03V18.42l6.127 13.364h.714l5.256-13.364v10.644c0 .29 0 .342-.185.528l-1.848 1.796v.396h9.19v-.396l-1.822-1.796c-.184-.186-.21-.238-.21-.528V15.937c0-.291.026-.344.21-.528l1.823-1.797v-.396h-6.471l-4.622 11.542-5.203-11.542h-6.79v.396l2.14 2.64c.239.292.291.37.291.768v10.353z"/></svg></span><span class="u-textScreenReader">Homepage</span></a></div></div><div class="metabar-block u-flex0"><div class="buttonSet buttonSet--wide"><a class="button button--chromeless u-baseColor--buttonNormal u-xs-hide js-upgradeMembershipAction"   href="https://medium.com/membership?source=upgrade_membership---nav_full">Become a member</a><a class="button button--primary button--chromeless u-accentColor--buttonNormal is-inSiteNavBar u-xs-hide js-signInButton"   href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.com%2F%40stowball%2Fa-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3&amp;source=--------------------------nav_reg&amp;operation=login" data-action="sign-in-prompt" data-redirect="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3" data-action-source="--------------------------nav_reg">Sign in</a><a class="button button--primary button--withChrome u-accentColor--buttonNormal is-inSiteNavBar js-signUpButton"   href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.com%2F%40stowball%2Fa-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3&amp;source=--------------------------nav_reg&amp;operation=register" data-action="sign-up-prompt" data-redirect="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3" data-action-source="--------------------------nav_reg">Get started</a></div></div></div></div><div class="metabar metabar--spacer js-metabarSpacer u-height65 u-xs-height56"></div><main role="main"><article class=" u-minHeight100vhOffset65 u-overflowHidden postArticle postArticle--full u-marginBottom40"  lang="en"><div class="postArticle-content js-postField js-notesSource js-trackPostScrolls"  data-post-id="d8904a7005d3" data-source="post_page" data-tracking-context="postPage"><section name="6e97" class="section section--body section--first section--last"><div class="section-divider"><hr class="section-divider"></div><div class="section-content"><div class="section-inner sectionLayout--insetColumn"><h1 name="b7a3" id="b7a3" class="graf graf--h3 graf--leading graf--title">A Dummy’s Guide to Redux and Thunk in React</h1><div class="uiScale uiScale-ui--regular uiScale-caption--regular u-flexCenter u-marginVertical24 u-fontSize15 js-postMetaLockup"><div class="u-flex0"><a class="link u-baseColor--link avatar"   href="https://medium.com/@stowball?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="25659e2d5b2b" data-action-type="hover" data-user-id="25659e2d5b2b" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/50/50/1*rpFwDleJzuWbAwfIYzOowA.jpeg" class="avatar-image u-size50x50" alt="Go to the profile of Matt Stow"></a></div><div class="u-flex1 u-paddingLeft15 u-overflowHidden"><div class="u-paddingBottom3"><a class="ds-link ds-link--styleSubtle ui-captionStrong u-inlineBlock link link--darken link--darker"   href="https://medium.com/@stowball" data-action="show-user-card" data-action-value="25659e2d5b2b" data-action-type="hover" data-user-id="25659e2d5b2b" dir="auto">Matt Stow</a><span class="followState js-followState" data-user-id="25659e2d5b2b"><button class="button button--smallest u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-marginLeft10 u-xs-hide"  data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3" data-action-source="post_header_lockup"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--smallest button--dark u-noUserSelect button--withChrome u-accentColor--buttonDark button--follow js-followButton u-marginLeft10 u-xs-hide"  data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/25659e2d5b2b" data-action-source="post_header_lockup-25659e2d5b2b-------------------------follow_byline"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span></div><div class="ui-caption u-noWrapWithEllipsis js-testPostMetaInlineSupplemental"><time datetime="2016-11-15T07:40:44.091Z">Nov 14, 2016</time><span class="middotDivider u-fontSize12"></span><span class="readingTime" title="11 min read"></span></div></div></div><p name="e080" id="e080" class="graf graf--p graf-after--h3">If, like me, you’ve <a href="http://redux.js.org/" data-href="http://redux.js.org/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">read the Redux docs</a>, <a href="https://egghead.io/courses/getting-started-with-redux" data-href="https://egghead.io/courses/getting-started-with-redux" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">watched Dan’s videos</a>, <a href="https://www.learnredux.com/" data-href="https://www.learnredux.com/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">done Wes’ course</a> and still not quite grasped how to use Redux, hopefully this will help.</p><p name="d139" id="d139" class="graf graf--p graf-after--p">It took me a few attempts at using Redux before it clicked, so I thought I’d write down the process of converting an existing application that fetches JSON to use Redux and <a href="https://github.com/gaearon/redux-thunk" data-href="https://github.com/gaearon/redux-thunk" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">Redux Thunk</a>. If you don’t know what Thunk is, don’t worry too much, but we’ll use it to make asynchronous calls in the “Redux way”.</p><p name="97a4" id="97a4" class="graf graf--p graf-after--p">This tutorial assumes you have a basic grasp of React and ES6/2015, but it should hopefully be easy enough to follow along regardless.</p><h3 name="75b4" id="75b4" class="graf graf--h3 graf-after--p">The non-Redux way</h3><p name="087a" id="087a" class="graf graf--p graf-after--h3">Let’s start with creating a React component in <code class="markup--code markup--p-code">components/ItemList.js</code> to fetch and display a list of items.</p><h3 name="b3b8" id="b3b8" class="graf graf--h3 graf-after--p">Laying the foundations</h3><p name="031c" id="031c" class="graf graf--p graf-after--h3">First we’ll setup a static component with a <code class="markup--code markup--p-code">state</code> that contains various <code class="markup--code markup--p-code">items</code> to output, and 2 boolean states to render something different when it&#39;s loading or errored respectively.</p><pre name="35c6" id="35c6" class="graf graf--pre graf-after--p">import React, { Component } from &#39;react&#39;;</pre><pre name="c439" id="c439" class="graf graf--pre graf-after--pre">class ItemList extends Component {<br>    constructor() {<br>        super();</pre><pre name="d9f4" id="d9f4" class="graf graf--pre graf-after--pre">        this.state = {<br>            items: [<br>                {<br>                    id: 1,<br>                    label: &#39;List item 1&#39;<br>                },<br>                {<br>                    id: 2,<br>                    label: &#39;List item 2&#39;<br>                },<br>                {<br>                    id: 3,<br>                    label: &#39;List item 3&#39;<br>                },<br>                {<br>                    id: 4,<br>                    label: &#39;List item 4&#39;<br>                }<br>            ],<br>            hasErrored: false,<br>            isLoading: false<br>        };<br>    }</pre><pre name="43f1" id="43f1" class="graf graf--pre graf-after--pre">    render() {<br>        if (this.state.hasErrored) {<br>            return &lt;p&gt;Sorry! There was an error loading the items&lt;/p&gt;;<br>        }</pre><pre name="d5d9" id="d5d9" class="graf graf--pre graf-after--pre">        if (this.state.isLoading) {<br>            return &lt;p&gt;Loading…&lt;/p&gt;;<br>        }</pre><pre name="f223" id="f223" class="graf graf--pre graf-after--pre">        return (<br>            &lt;ul&gt;<br>                {this.state.items.map((item) =&gt; (<br>                    &lt;li key={item.id}&gt;<br>                        {item.label}<br>                    &lt;/li&gt;<br>                ))}<br>            &lt;/ul&gt;<br>        );<br>    }<br>}</pre><pre name="57bd" id="57bd" class="graf graf--pre graf-after--pre">export default ItemList;</pre><p name="17ab" id="17ab" class="graf graf--p graf-after--pre">It may not seem like much, but this is a good start.</p><p name="2d03" id="2d03" class="graf graf--p graf-after--p">When rendered, the component should output 4 list items, but if you were to set <code class="markup--code markup--p-code">isLoading</code> or <code class="markup--code markup--p-code">hasErrored</code> to <code class="markup--code markup--p-code">true</code>, a relevant <code class="markup--code markup--p-code">&lt;p&gt;&lt;/p&gt;</code> would be output instead.</p><h3 name="67a0" id="67a0" class="graf graf--h3 graf-after--p">Making it dynamic</h3><p name="5b0d" id="5b0d" class="graf graf--p graf-after--h3">Hard-coding the items doesn’t make for a very useful component, so let’s fetch the <code class="markup--code markup--p-code">items</code> from a JSON API, which will also allow us to set <code class="markup--code markup--p-code">isLoading</code> and <code class="markup--code markup--p-code">hasErrored</code> as appropriate.</p><p name="1083" id="1083" class="graf graf--p graf-after--p">The response will be identical to our hard-coded list of items, but in the real world, you could pull in a list of best-selling books, latest blog posts, or whatever suits your application.</p><p name="8caa" id="8caa" class="graf graf--p graf-after--p">To fetch the items, we’re going to use the aptly named <a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API" data-href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">Fetch API</a>. Fetch makes making requests much easier than the classic <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest" data-href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">XMLHttpRequest</a> and returns a promise of the resolved response (which is important to Thunk). Fetch isn’t available in all browsers, so you’ll need to add it as a dependency to your project with:</p><pre name="f269" id="f269" class="graf graf--pre graf-after--p">npm install whatwg-fetch --save</pre><p name="a0e5" id="a0e5" class="graf graf--p graf-after--pre">The conversion is actually quite simple.</p><ul class="postList"><li name="cbd0" id="cbd0" class="graf graf--li graf-after--p">First we’ll set our initial <code class="markup--code markup--li-code">items</code> to an empty array <code class="markup--code markup--li-code">[]</code></li><li name="b01d" id="b01d" class="graf graf--li graf-after--li">Now we’ll add a method to fetch the data and set the loading and error states:</li></ul><pre name="f345" id="f345" class="graf graf--pre graf-after--li">fetchData(url) {<br>    this.setState({ isLoading: true });</pre><pre name="199e" id="199e" class="graf graf--pre graf-after--pre">    fetch(url)<br>        .then((response) =&gt; {<br>            if (!response.ok) {<br>                throw Error(response.statusText);<br>            }</pre><pre name="6389" id="6389" class="graf graf--pre graf-after--pre">            this.setState({ isLoading: false });</pre><pre name="964b" id="964b" class="graf graf--pre graf-after--pre">            return response;<br>        })<br>        .then((response) =&gt; response.json())<br>        .then((items) =&gt; this.setState({ items })) // ES6 property value shorthand for { items: items }<br>        .catch(() =&gt; this.setState({ hasErrored: true }));<br>}</pre><ul class="postList"><li name="0f18" id="0f18" class="graf graf--li graf-after--pre">Then we’ll call it when the component mounts:</li></ul><pre name="217c" id="217c" class="graf graf--pre graf-after--li">componentDidMount() {<br>  this.fetchData(&#39;http://5826ed963900d612000138bd.mockapi.io/items&#39;);<br>}</pre><p name="f587" id="f587" class="graf graf--p graf-after--pre">Which leaves us with <em class="markup--em markup--p-em">(unchanged lines omitted)</em>:</p><pre name="9c92" id="9c92" class="graf graf--pre graf-after--p">class ItemList extends Component {<br>    constructor() {<br>        this.state = {<br>            items: [],<br>        };<br>    }</pre><pre name="7b2a" id="7b2a" class="graf graf--pre graf-after--pre">    fetchData(url) {<br>        this.setState({ isLoading: true });</pre><pre name="5147" id="5147" class="graf graf--pre graf-after--pre">        fetch(url)<br>            .then((response) =&gt; {<br>                if (!response.ok) {<br>                    throw Error(response.statusText);<br>                }</pre><pre name="7f1d" id="7f1d" class="graf graf--pre graf-after--pre">                this.setState({ isLoading: false });</pre><pre name="ca05" id="ca05" class="graf graf--pre graf-after--pre">                return response;<br>            })<br>            .then((response) =&gt; response.json())<br>            .then((items) =&gt; this.setState({ items }))<br>            .catch(() =&gt; this.setState({ hasErrored: true }));<br>    }</pre><pre name="2eed" id="2eed" class="graf graf--pre graf-after--pre">    componentDidMount() {<br>        this.fetchData(&#39;http://5826ed963900d612000138bd.mockapi.io/items&#39;);<br>    }</pre><pre name="c93e" id="c93e" class="graf graf--pre graf-after--pre">    render() {<br>    }<br>}</pre><p name="67b4" id="67b4" class="graf graf--p graf-after--pre">And that’s it. Your component now fetches the <code class="markup--code markup--p-code">items</code> from a REST endpoint! You should hopefully see <code class="markup--code markup--p-code">&quot;Loading…&quot;</code>appear briefly before the 4 list items. If you pass in a broken URL to <code class="markup--code markup--p-code">fetchData</code> you should see our error message.</p><p name="2aec" id="2aec" class="graf graf--p graf-after--p">However, in reality, a component shouldn’t include logic to fetch data, and data shouldn’t be stored in a component’s state, so this is where Redux comes in.</p><h3 name="9abd" id="9abd" class="graf graf--h3 graf-after--p">Converting to Redux</h3><p name="f0fa" id="f0fa" class="graf graf--p graf-after--h3">To start, we need to add Redux, React Redux and Redux Thunk as dependencies of our project so we can use them. We can do that with:</p><pre name="2b31" id="2b31" class="graf graf--pre graf-after--p">npm install redux react-redux redux-thunk --save</pre><h3 name="eb55" id="eb55" class="graf graf--h3 graf-after--pre">Understanding Redux</h3><p name="098b" id="098b" class="graf graf--p graf-after--h3">There are a few core principles to Redux which we need to understand:</p><ol class="postList"><li name="2613" id="2613" class="graf graf--li graf-after--p">There is 1 global state object that manages the state for your entire application. In this example, it will behave identically to our initial component’s state. It is the <em class="markup--em markup--li-em">single source of truth</em>.</li><li name="4908" id="4908" class="graf graf--li graf-after--li">The only way to modify the state is through emitting an action, which is an object that describes what should change. Action Creators are the functions that are <code class="markup--code markup--li-code">dispatch</code>ed to emit a change – all they do is <code class="markup--code markup--li-code">return</code> an action.</li><li name="4ef8" id="4ef8" class="graf graf--li graf-after--li">When an action is <code class="markup--code markup--li-code">dispatch</code>ed, a Reducer is the function that actually changes the state appropriate to that action – or returns the existing state if the action is not applicable to that reducer.</li><li name="b330" id="b330" class="graf graf--li graf-after--li">Reducers are “pure functions”. They should not have any side-effects nor mutate the state — they must return a modified copy.</li><li name="28d7" id="28d7" class="graf graf--li graf-after--li">Individual reducers are combined into a single <code class="markup--code markup--li-code">rootReducer</code> to create the discrete properties of the state.</li><li name="4112" id="4112" class="graf graf--li graf-after--li">The Store is the thing that brings it all together: it represents the state by using the <code class="markup--code markup--li-code">rootReducer</code>, any middleware (Thunk in our case), and allows you to actually <code class="markup--code markup--li-code">dispatch</code> actions.</li><li name="376c" id="376c" class="graf graf--li graf-after--li">For using Redux in React, the <code class="markup--code markup--li-code">&lt;Provider /&gt;</code> component wraps the entire application and passes the <code class="markup--code markup--li-code">store</code>down to all children.</li></ol><p name="7150" id="7150" class="graf graf--p graf-after--li">This should all become clearer as we start to convert our application to use Redux.</p><h3 name="0676" id="0676" class="graf graf--h3 graf-after--p">Designing our state</h3><p name="6794" id="6794" class="graf graf--p graf-after--h3">From the work we’ve already done, we know that our state needs to have 3 properties: <code class="markup--code markup--p-code">items</code>, <code class="markup--code markup--p-code">hasErrored</code> and <code class="markup--code markup--p-code">isLoading</code> for this application to work as expected under all circumstances, which correlates to needing 3 unique actions.</p><p name="1119" id="1119" class="graf graf--p graf-after--p">Now, here is why Action Creators are different to Actions and do not necessarily have a 1:1 relationship: we need a fourth action creator that calls our 3 other action (creators) depending on the status of fetching the data. This fourth action creator is almost identical to our original <code class="markup--code markup--p-code">fetchData()</code> method, but instead of directly setting the state with <code class="markup--code markup--p-code">this.setState({ isLoading: true })</code>, we&#39;ll <code class="markup--code markup--p-code">dispatch</code> an action to do the same: <code class="markup--code markup--p-code">dispatch(isLoading(true))</code>.</p><h3 name="c0c7" id="c0c7" class="graf graf--h3 graf-after--p">Creating our actions</h3><p name="6458" id="6458" class="graf graf--p graf-after--h3">Let’s create an <code class="markup--code markup--p-code">actions/items.js</code> file to contain our action creators. We&#39;ll start with our 3 simple actions.</p><pre name="e60a" id="e60a" class="graf graf--pre graf-after--p">export function itemsHasErrored(bool) {<br>    return {<br>        type: &#39;ITEMS_HAS_ERRORED&#39;,<br>        hasErrored: bool<br>    };<br>}</pre><pre name="0da1" id="0da1" class="graf graf--pre graf-after--pre">export function itemsIsLoading(bool) {<br>    return {<br>        type: &#39;ITEMS_IS_LOADING&#39;,<br>        isLoading: bool<br>    };<br>}</pre><pre name="6c5e" id="6c5e" class="graf graf--pre graf-after--pre">export function itemsFetchDataSuccess(items) {<br>    return {<br>        type: &#39;ITEMS_FETCH_DATA_SUCCESS&#39;,<br>        items<br>    };<br>}</pre><p name="9d22" id="9d22" class="graf graf--p graf-after--pre">As mentioned before, action creators are functions that return an action. We <code class="markup--code markup--p-code">export</code> each one so we can use them elsewhere in our codebase.</p><p name="5236" id="5236" class="graf graf--p graf-after--p">The first 2 action creators take a <code class="markup--code markup--p-code">bool</code> (<code class="markup--code markup--p-code">true</code>/<code class="markup--code markup--p-code">false</code>) as their argument and return an object with a meaningful <code class="markup--code markup--p-code">type</code> and the <code class="markup--code markup--p-code">bool</code> assigned to the appropriate property.</p><p name="b8bb" id="b8bb" class="graf graf--p graf-after--p">The third, <code class="markup--code markup--p-code">itemsFetchDataSuccess()</code>, will be called when the data has been successfully fetched, with the data passed to it as <code class="markup--code markup--p-code">items</code>. Through the magic of ES6 property value shorthands, we&#39;ll return an object with a property called <code class="markup--code markup--p-code">items</code> whose value will be the array of <code class="markup--code markup--p-code">items</code>;</p><p name="82d1" id="82d1" class="graf graf--p graf-after--p"><em class="markup--em markup--p-em">Note: that the value you use for </em><code class="markup--code markup--p-code"><em class="markup--em markup--p-em">type</em></code><em class="markup--em markup--p-em"> and the name of the other property that is returned is important, because you will re-use them in your reducers</em></p><p name="c6ce" id="c6ce" class="graf graf--p graf-after--p">Now that we have the 3 actions which will represent our state, we’ll convert our original component’s <code class="markup--code markup--p-code">fetchData</code>method to an <code class="markup--code markup--p-code">itemsFetchData()</code> action creator.</p><p name="11c2" id="11c2" class="graf graf--p graf-after--p">By default, Redux action creators don’t support asynchronous actions like fetching data, so here’s where we utilise Redux Thunk. Thunk allows you to write action creators that return a function instead of an action. The inner function can receive the store methods <code class="markup--code markup--p-code">dispatch</code> and <code class="markup--code markup--p-code">getState</code> as parameters, but we&#39;ll just use <code class="markup--code markup--p-code">dispatch</code>.</p><p name="ecc6" id="ecc6" class="graf graf--p graf-after--p">A real simple example would be to manually trigger <code class="markup--code markup--p-code">itemsHasErrored()</code> after 5 seconds.</p><pre name="4f3e" id="4f3e" class="graf graf--pre graf-after--p">export function errorAfterFiveSeconds() {<br>    // We return a function instead of an action object<br>    return (dispatch) =&gt; {<br>        setTimeout(() =&gt; {<br>            // This function is able to dispatch other action creators<br>            dispatch(itemsHasErrored(true));<br>        }, 5000);<br>    };<br>}</pre><p name="0869" id="0869" class="graf graf--p graf-after--pre">Now we know what a thunk is, we can write <code class="markup--code markup--p-code">itemsFetchData()</code>.</p><pre name="7a79" id="7a79" class="graf graf--pre graf-after--p">export function itemsFetchData(url) {<br>    return (dispatch) =&gt; {<br>        dispatch(itemsIsLoading(true));</pre><pre name="fd7c" id="fd7c" class="graf graf--pre graf-after--pre">        fetch(url)<br>            .then((response) =&gt; {<br>                if (!response.ok) {<br>                    throw Error(response.statusText);<br>                }</pre><pre name="6515" id="6515" class="graf graf--pre graf-after--pre">                dispatch(itemsIsLoading(false));</pre><pre name="0504" id="0504" class="graf graf--pre graf-after--pre">                return response;<br>            })<br>            .then((response) =&gt; response.json())<br>            .then((items) =&gt; dispatch(itemsFetchDataSuccess(items)))<br>            .catch(() =&gt; dispatch(itemsHasErrored(true)));<br>    };<br>}</pre><h3 name="7f94" id="7f94" class="graf graf--h3 graf-after--pre">Creating our reducers</h3><p name="fd53" id="fd53" class="graf graf--p graf-after--h3">With our action creators defined, we now write reducers that take these actions and return a new state of our application.</p><p name="f66a" id="f66a" class="graf graf--p graf-after--p"><em class="markup--em markup--p-em">Note: In Redux, all reducers get called regardless of the action, so inside each one you have to return the original </em><code class="markup--code markup--p-code"><em class="markup--em markup--p-em">state</em></code><em class="markup--em markup--p-em"> if the action is not applicable.</em></p><p name="ae94" id="ae94" class="graf graf--p graf-after--p">Each reducer takes 2 parameters: the previous state (<code class="markup--code markup--p-code">state</code>) and an <code class="markup--code markup--p-code">action</code> object. We can also use an ES6 feature called default parameters to set the default initial <code class="markup--code markup--p-code">state</code>.</p><p name="aa8e" id="aa8e" class="graf graf--p graf-after--p">Inside each reducer, we use a <code class="markup--code markup--p-code">switch</code> statement to determine when an <code class="markup--code markup--p-code">action.type</code> matches. While it may seem unnecessary in these simple reducers, your reducers could theoretically have a lot of conditions, so <code class="markup--code markup--p-code">if</code>/<code class="markup--code markup--p-code">else if</code>/<code class="markup--code markup--p-code">else</code> will get messy fast.</p><p name="6066" id="6066" class="graf graf--p graf-after--p">If the <code class="markup--code markup--p-code">action.type</code> matches, then we return the relevant property of <code class="markup--code markup--p-code">action</code>. As mentioned earlier, the <code class="markup--code markup--p-code">type</code> and <code class="markup--code markup--p-code">action[propertyName]</code> is what was defined in your action creators.</p><p name="c6e4" id="c6e4" class="graf graf--p graf-after--p">OK, knowing this, let’s create our items reducers in <code class="markup--code markup--p-code">reducers/items.js</code>.</p><pre name="3d5a" id="3d5a" class="graf graf--pre graf-after--p">export function itemsHasErrored(state = false, action) {<br>    switch (action.type) {<br>        case &#39;ITEMS_HAS_ERRORED&#39;:<br>            return action.hasErrored;</pre><pre name="8594" id="8594" class="graf graf--pre graf-after--pre">        default:<br>            return state;<br>    }<br>}</pre><pre name="3a71" id="3a71" class="graf graf--pre graf-after--pre">export function itemsIsLoading(state = false, action) {<br>    switch (action.type) {<br>        case &#39;ITEMS_IS_LOADING&#39;:<br>            return action.isLoading;</pre><pre name="6265" id="6265" class="graf graf--pre graf-after--pre">        default:<br>            return state;<br>    }<br>}</pre><pre name="fb47" id="fb47" class="graf graf--pre graf-after--pre">export function items(state = [], action) {<br>    switch (action.type) {<br>        case &#39;ITEMS_FETCH_DATA_SUCCESS&#39;:<br>            return action.items;</pre><pre name="1174" id="1174" class="graf graf--pre graf-after--pre">        default:<br>            return state;<br>    }<br>}</pre><p name="9c86" id="9c86" class="graf graf--p graf-after--pre">Notice how each reducer is named after the resulting store’s state property, with the <code class="markup--code markup--p-code">action.type</code> not necessarily needing to correspond. The first 2 reducers hopefully make complete sense, but the last, <code class="markup--code markup--p-code">items()</code>, is slightly different.</p><p name="3593" id="3593" class="graf graf--p graf-after--p">This is because it could have multiple conditions which would always return an array of <code class="markup--code markup--p-code">items</code>: it could return all in the case of a fetch success, it could return a subset of <code class="markup--code markup--p-code">items</code> after a delete action is <code class="markup--code markup--p-code">dispatch</code>ed, or it could return an empty array if everything is deleted.</p><p name="3850" id="3850" class="graf graf--p graf-after--p">To re-iterate, every reducer will return a discrete property of the state, regardless of how many conditions are inside that reducer. That initially took me a while to get my head around.</p><p name="5caf" id="5caf" class="graf graf--p graf-after--p">With the individual reducers created, we need to combine them into a <code class="markup--code markup--p-code">rootReducer</code> to create a single object.</p><p name="1745" id="1745" class="graf graf--p graf-after--p">Create a new file at <code class="markup--code markup--p-code">reducers/index.js</code>.</p><pre name="1e3f" id="1e3f" class="graf graf--pre graf-after--p">import { combineReducers } from &#39;redux&#39;;<br>import { items, itemsHasErrored, itemsIsLoading } from &#39;./items&#39;;</pre><pre name="2524" id="2524" class="graf graf--pre graf-after--pre">export default combineReducers({<br>    items,<br>    itemsHasErrored,<br>    itemsIsLoading<br>});</pre><p name="6bc2" id="6bc2" class="graf graf--p graf-after--pre">We import each of the reducers from <code class="markup--code markup--p-code">items.js</code> and export them with Redux&#39;s <code class="markup--code markup--p-code">combineReducers()</code>. As our reducer names are identical to what we want to use for a store&#39;s property names, we can use the ES6 shorthand.</p><p name="10b1" id="10b1" class="graf graf--p graf-after--p">Notice how I intentionally prefixed my reducer names, so that when the application grows in complexity, I’m not constrained by having a “global” <code class="markup--code markup--p-code">hasErrored</code> or <code class="markup--code markup--p-code">isLoading</code> property. You may have many different features that could error or be in a loading state, so prefixing the imports and then exporting those will give your application&#39;s state greater granularity and flexibility. For example:</p><pre name="62b3" id="62b3" class="graf graf--pre graf-after--p">import { combineReducers } from &#39;redux&#39;;<br>import { items, itemsHasErrored, itemsIsLoading } from &#39;./items&#39;;<br>import { posts, postsHasErrored, postsIsLoading } from &#39;./posts&#39;;</pre><pre name="50ee" id="50ee" class="graf graf--pre graf-after--pre">export default combineReducers({<br>    items,<br>    itemsHasErrored,<br>    itemsIsLoading,<br>    posts,<br>    postsHasErrored,<br>    postsIsLoading<br>});</pre><p name="573b" id="573b" class="graf graf--p graf-after--pre">Alternatively, you could alias the methods on <code class="markup--code markup--p-code">import</code>, but I prefer consistency across the board.</p><h3 name="bf5e" id="bf5e" class="graf graf--h3 graf-after--p">Configure the store and provide it to your app</h3><p name="b826" id="b826" class="graf graf--p graf-after--h3">This is pretty straightforward. Let’s create <code class="markup--code markup--p-code">store/configureStore.js</code> with:</p><pre name="0458" id="0458" class="graf graf--pre graf-after--p">import { createStore, applyMiddleware } from &#39;redux&#39;;<br>import thunk from &#39;redux-thunk&#39;;<br>import rootReducer from &#39;../reducers&#39;;</pre><pre name="9ed1" id="9ed1" class="graf graf--pre graf-after--pre">export default function configureStore(initialState) {<br>    return createStore(<br>        rootReducer,<br>        initialState,<br>        applyMiddleware(thunk)<br>    );<br>}</pre><p name="5b37" id="5b37" class="graf graf--p graf-after--pre">Now change our app’s <code class="markup--code markup--p-code">index.js</code> to include <code class="markup--code markup--p-code">&lt;Provider /&gt;</code>, <code class="markup--code markup--p-code">configureStore</code>, set up our <code class="markup--code markup--p-code">store</code> and wrap our app (<code class="markup--code markup--p-code">&lt;ItemList /&gt;</code>) to pass the <code class="markup--code markup--p-code">store</code> down as <code class="markup--code markup--p-code">props</code>:</p><pre name="da88" id="da88" class="graf graf--pre graf-after--p">import React from &#39;react&#39;;<br>import { render } from &#39;react-dom&#39;;<br>import { Provider } from &#39;react-redux&#39;;<br>import configureStore from &#39;./store/configureStore&#39;;</pre><pre name="3f2f" id="3f2f" class="graf graf--pre graf-after--pre">import ItemList from &#39;./components/ItemList&#39;;</pre><pre name="c2cb" id="c2cb" class="graf graf--pre graf-after--pre">const store = configureStore(); // You can also pass in an initialState here</pre><pre name="0a4b" id="0a4b" class="graf graf--pre graf-after--pre">render(<br>    &lt;Provider store={store}&gt;<br>        &lt;ItemList /&gt;<br>    &lt;/Provider&gt;,<br>    document.getElementById(&#39;app&#39;)<br>);</pre><p name="5f29" id="5f29" class="graf graf--p graf-after--pre">I know, it’s taken quite a bit of effort to get to this stage, but with the set up complete, we can now modify our component to make use of what we’ve done.</p><h3 name="852e" id="852e" class="graf graf--h3 graf-after--p">Converting our component to use the Redux store and methods</h3><p name="06ae" id="06ae" class="graf graf--p graf-after--h3">Let’s jump back in to <code class="markup--code markup--p-code">components/ItemList.js</code>.</p><p name="28c8" id="28c8" class="graf graf--p graf-after--p">At the top of the file, <code class="markup--code markup--p-code">import</code> what we need:</p><pre name="899c" id="899c" class="graf graf--pre graf-after--p">import { connect } from &#39;react-redux&#39;;<br>import { itemsFetchData } from &#39;../actions/items&#39;;</pre><p name="f375" id="f375" class="graf graf--p graf-after--pre"><code class="markup--code markup--p-code">connect</code> is what allows us to connect a component to Redux&#39;s store, and <code class="markup--code markup--p-code">itemsFetchData</code> is the action creator we wrote earlier. We only need to import this one action creator, as it handles <code class="markup--code markup--p-code">dispatch</code>ing the other actions.</p><p name="bba9" id="bba9" class="graf graf--p graf-after--p">After our component’s <code class="markup--code markup--p-code">class</code> definition, we&#39;re going to map Redux&#39;s state and the dispatching of our action creator to props.</p><p name="48e3" id="48e3" class="graf graf--p graf-after--p">We create a function that accepts <code class="markup--code markup--p-code">state</code> and then returns an object of props. In a simple component like this, I remove the prefixing for the <code class="markup--code markup--p-code">has</code>/<code class="markup--code markup--p-code">is</code> props as it’s obvious that they&#39;re related to <code class="markup--code markup--p-code">items</code>.</p><pre name="5488" id="5488" class="graf graf--pre graf-after--p">const mapStateToProps = (state) =&gt; {<br>    return {<br>        items: state.items,<br>        hasErrored: state.itemsHasErrored,<br>        isLoading: state.itemsIsLoading<br>    };<br>};</pre><p name="3c48" id="3c48" class="graf graf--p graf-after--pre">And then we need another function to be able to <code class="markup--code markup--p-code">dispatch</code> our <code class="markup--code markup--p-code">itemsFetchData()</code> action creator with a prop.</p><pre name="5c2e" id="5c2e" class="graf graf--pre graf-after--p">const mapDispatchToProps = (dispatch) =&gt; {<br>    return {<br>        fetchData: (url) =&gt; dispatch(itemsFetchData(url))<br>    };<br>};</pre><p name="a304" id="a304" class="graf graf--p graf-after--pre">Again, I’ve removed the <code class="markup--code markup--p-code">items</code> prefix from the returned object property. Here <code class="markup--code markup--p-code">fetchData</code> is a function that accepts a <code class="markup--code markup--p-code">url</code> parameter and returns <code class="markup--code markup--p-code">dispatch</code>ing <code class="markup--code markup--p-code">itemsFetchData(url)</code>.</p><p name="df43" id="df43" class="graf graf--p graf-after--p">Now, these 2 <code class="markup--code markup--p-code">mapStateToProps()</code> and <code class="markup--code markup--p-code">mapDispatchToProps()</code> don&#39;t do anything yet, so we need to change our final <code class="markup--code markup--p-code">export</code> line to:</p><pre name="2f70" id="2f70" class="graf graf--pre graf-after--p">export default connect(mapStateToProps, mapDispatchToProps)(ItemList);</pre><p name="4105" id="4105" class="graf graf--p graf-after--pre">This <code class="markup--code markup--p-code">connect</code>s our <code class="markup--code markup--p-code">ItemList</code> to Redux while mapping the props for us to use.</p><p name="99fe" id="99fe" class="graf graf--p graf-after--p">The final step is to convert our component to use <code class="markup--code markup--p-code">props</code> instead of <code class="markup--code markup--p-code">state</code>, and to remove the leftovers.</p><ul class="postList"><li name="f10d" id="f10d" class="graf graf--li graf-after--p">Delete the <code class="markup--code markup--li-code">constructor() {}</code> and <code class="markup--code markup--li-code">fetchData() {}</code> methods as they&#39;re unnecessary now.</li><li name="43b6" id="43b6" class="graf graf--li graf-after--li">Change <code class="markup--code markup--li-code">this.fetchData()</code> in <code class="markup--code markup--li-code">componentDidMount()</code> to <code class="markup--code markup--li-code">this.props.fetchData()</code>.</li><li name="1126" id="1126" class="graf graf--li graf-after--li">Change <code class="markup--code markup--li-code">this.state.X</code> to <code class="markup--code markup--li-code">this.props.X</code> for <code class="markup--code markup--li-code">.hasErrored</code>, <code class="markup--code markup--li-code">.isLoading</code> and <code class="markup--code markup--li-code">.items</code>.</li></ul><p name="a3a1" id="a3a1" class="graf graf--p graf-after--li">Your component should now look like this:</p><pre name="8c8f" id="8c8f" class="graf graf--pre graf-after--p">import React, { Component } from &#39;react&#39;;<br>import { connect } from &#39;react-redux&#39;;<br>import { itemsFetchData } from &#39;../actions/items&#39;;</pre><pre name="8ef3" id="8ef3" class="graf graf--pre graf-after--pre">class ItemList extends Component {<br>    componentDidMount() {<br>        this.props.fetchData(&#39;http://5826ed963900d612000138bd.mockapi.io/items&#39;);<br>    }</pre><pre name="781f" id="781f" class="graf graf--pre graf-after--pre">    render() {<br>        if (this.props.hasErrored) {<br>            return &lt;p&gt;Sorry! There was an error loading the items&lt;/p&gt;;<br>        }</pre><pre name="17db" id="17db" class="graf graf--pre graf-after--pre">        if (this.props.isLoading) {<br>            return &lt;p&gt;Loading…&lt;/p&gt;;<br>        }</pre><pre name="1df3" id="1df3" class="graf graf--pre graf-after--pre">        return (<br>            &lt;ul&gt;<br>                {this.props.items.map((item) =&gt; (<br>                    &lt;li key={item.id}&gt;<br>                        {item.label}<br>                    &lt;/li&gt;<br>                ))}<br>            &lt;/ul&gt;<br>        );<br>    }<br>}</pre><pre name="2ce6" id="2ce6" class="graf graf--pre graf-after--pre">const mapStateToProps = (state) =&gt; {<br>    return {<br>        items: state.items,<br>        hasErrored: state.itemsHasErrored,<br>        isLoading: state.itemsIsLoading<br>    };<br>};</pre><pre name="ef7e" id="ef7e" class="graf graf--pre graf-after--pre">const mapDispatchToProps = (dispatch) =&gt; {<br>    return {<br>        fetchData: (url) =&gt; dispatch(itemsFetchData(url))<br>    };<br>};</pre><pre name="0faf" id="0faf" class="graf graf--pre graf-after--pre">export default connect(mapStateToProps, mapDispatchToProps)(ItemList);</pre><p name="6826" id="6826" class="graf graf--p graf-after--pre">And that’s it! The application now uses Redux and Redux Thunk to fetch and display the data!</p><p name="3658" id="3658" class="graf graf--p graf-after--p">That wasn’t too difficult, was it?</p><p name="48da" id="48da" class="graf graf--p graf-after--p">And you’re now a Redux master :D</p><h3 name="9aa5" id="9aa5" class="graf graf--h3 graf-after--p">What next?</h3><p name="1ea8" id="1ea8" class="graf graf--p graf-after--h3">I’ve put all of <a href="https://github.com/stowball/dummys-guide-to-redux-and-thunk-react" data-href="https://github.com/stowball/dummys-guide-to-redux-and-thunk-react" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">this code up on GitHub</a>, with commits for each step. I want you to clone it, run it and understand it, then add the ability for the user to delete individual list items based on the item’s <code class="markup--code markup--p-code">index</code>.</p><p name="96f1" id="96f1" class="graf graf--p graf-after--p">I haven’t yet really mentioned that in Redux, the <em class="markup--em markup--p-em">state is immutable</em>, which means you can’t modify it, so have to return a new state in your reducers instead. The 3 reducers we wrote above were simple and “just worked”, but deleting items from an array requires an approach that you may not be familiar with.</p><p name="fe76" id="fe76" class="graf graf--p graf-after--p">You can no longer use <code class="markup--code markup--p-code">Array.prototype.splice()</code> to remove items from an array, as that will mutate the original array. <a href="https://egghead.io/lessons/javascript-redux-avoiding-array-mutations-with-concat-slice-and-spread" data-href="https://egghead.io/lessons/javascript-redux-avoiding-array-mutations-with-concat-slice-and-spread" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">Dan explains how to remove an element from an array in this video</a>, but if you get stuck, you can check out (pun intended) the <code class="markup--code markup--p-code">delete-items</code> branch for the solution.</p><p name="5dfb" id="5dfb" class="graf graf--p graf-after--p">I really hope that this has clarified the concept of Redux and Thunk and how you might go about converting an existing React application to use them. I know that writing this has solidified my understanding of it, so I’m very happy to have done it.</p><p name="6c3f" id="6c3f" class="graf graf--p graf-after--p">I’d still recommend <a href="http://redux.js.org/" data-href="http://redux.js.org/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">reading the Redux docs</a>, <a href="https://egghead.io/courses/getting-started-with-redux" data-href="https://egghead.io/courses/getting-started-with-redux" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">watching Dan’s videos</a>, and <a href="https://www.learnredux.com/" data-href="https://www.learnredux.com/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">re-doing Wes’ course</a> as you should hopefully now be able to understand some of the other more complex and deeper principles.</p><p name="a346" id="a346" class="graf graf--p graf-after--p graf--trailing">This <a href="http://codepen.io/stowball/post/a-dummy-s-guide-to-redux-and-thunk-in-react" data-href="http://codepen.io/stowball/post/a-dummy-s-guide-to-redux-and-thunk-in-react" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">article has been cross-posted on Codepen</a> for better code formatting.</p></div></div></section></div><footer class="u-paddingTop10"><div class="container u-maxWidth740"><div class="row"><div class="col u-size12of12"></div></div><div class="row"><div class="col u-size12of12 js-postTags"><div class="u-paddingBottom10"><ul class="tags tags--postTags tags--borderless"><li><a class="link u-baseColor--link"   href="https://medium.com/tag/redux?source=post" data-action-source="post">Redux</a></li><li><a class="link u-baseColor--link"   href="https://medium.com/tag/react?source=post" data-action-source="post">React</a></li><li><a class="link u-baseColor--link"   href="https://medium.com/tag/javascript?source=post" data-action-source="post">JavaScript</a></li><li><a class="link u-baseColor--link"   href="https://medium.com/tag/tutorial?source=post" data-action-source="post">Tutorial</a></li></ul></div></div></div><div class="postActions js-postActionsFooter "><div class="u-flexCenter"><div class="u-flex1"><div class="multirecommend js-actionMultirecommend u-flexCenter" data-post-id="d8904a7005d3" data-is-icon-29px="true" data-is-circle="true" data-has-recommend-list="true" data-source="post_actions_footer-----d8904a7005d3---------------------clap_footer" data-clap-string-singular="clap" data-clap-string-plural="claps"><div class="u-relative u-foreground"><button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--darker clapButton--largePill u-relative u-foreground u-xs-paddingLeft13 u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal clap-onboarding"  data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/d8904a7005d3" data-action-source="post_actions_footer-----d8904a7005d3---------------------clap_footer" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0"><svg class="svgIcon-use" width="33" height="33" ><path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0"><svg class="svgIcon-use" width="33" height="33" ><g fill-rule="evenodd"><path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z"/><path d="M13.285.48l-1.916.881 2.37 2.837z"/><path d="M21.719 1.361L19.79.501l-.44 3.697z"/><path d="M16.502 3.298L15.481 0h2.043z"/></g></svg></span></span></button><div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Springu-backgroundGrayLighter js-clapUndo" style="top: 14px; padding: 2px;"><button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight"  data-action="multivote-undo" data-action-value="d8904a7005d3"><span class="svgIcon svgIcon--removeThin svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd"/></svg></span></button></div></div><span class="u-relative u-background js-actionMultirecommendCount u-marginLeft16"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton u-textColorDarker"  data-action="show-recommends" data-action-value="d8904a7005d3">9.3K claps</button><span class="u-xs-hide"></span></span></div></div><div class="buttonSet u-flex0"><a class="button button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon button--dark button--chromeless u-xs-hide u-marginRight12"   href="https://medium.com/p/d8904a7005d3/share/twitter" title="Share on Twitter" aria-label="Share on Twitter" target="_blank" data-action-source="post_actions_footer"><span class="button-defaultState"><span class="svgIcon svgIcon--twitterFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M22.053 7.54a4.474 4.474 0 0 0-3.31-1.455 4.526 4.526 0 0 0-4.526 4.524c0 .35.04.7.082 1.05a12.9 12.9 0 0 1-9.3-4.77c-.39.69-.61 1.46-.65 2.26.03 1.6.83 2.99 2.02 3.79-.72-.02-1.41-.22-2.02-.57-.01.02-.01.04 0 .08-.01 2.17 1.55 4 3.63 4.44-.39.08-.79.13-1.21.16-.28-.03-.57-.05-.81-.08.54 1.77 2.21 3.08 4.2 3.15a9.564 9.564 0 0 1-5.66 1.94c-.34-.03-.7-.06-1.05-.08 2 1.27 4.38 2.02 6.94 2.02 8.31 0 12.86-6.9 12.84-12.85.02-.24.01-.43 0-.65.89-.62 1.65-1.42 2.26-2.34-.82.38-1.69.62-2.59.72a4.37 4.37 0 0 0 1.94-2.51c-.84.53-1.81.9-2.83 1.13z"/></svg></span></span></a><a class="button button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon button--dark button--chromeless u-xs-hide u-marginRight12"   href="https://medium.com/p/d8904a7005d3/share/facebook" title="Share on Facebook" aria-label="Share on Facebook" target="_blank" data-action-source="post_actions_footer"><span class="button-defaultState"><span class="svgIcon svgIcon--facebookSquare svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M23.209 5H5.792A.792.792 0 0 0 5 5.791V23.21c0 .437.354.791.792.791h9.303v-7.125H12.72v-2.968h2.375v-2.375c0-2.455 1.553-3.662 3.741-3.662 1.049 0 1.95.078 2.213.112v2.565h-1.517c-1.192 0-1.469.567-1.469 1.397v1.963h2.969l-.594 2.968h-2.375L18.11 24h5.099a.791.791 0 0 0 .791-.791V5.79a.791.791 0 0 0-.791-.79"/></svg></span></span></a><button class="button button--large button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon u-xs-show u-marginRight10"  title="Share this story on Twitter or Facebook" aria-label="Share this story on Twitter or Facebook" data-action="show-share-popover" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--share svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M20.385 8H19a.5.5 0 1 0 .011 1h1.39c.43 0 .84.168 1.14.473.31.305.48.71.48 1.142v10.77c0 .43-.17.837-.47 1.142-.3.305-.71.473-1.14.473H8.62c-.43 0-.84-.168-1.144-.473a1.603 1.603 0 0 1-.473-1.142v-10.77c0-.43.17-.837.48-1.142A1.599 1.599 0 0 1 8.62 9H10a.502.502 0 0 0 0-1H8.615c-.67 0-1.338.255-1.85.766-.51.51-.765 1.18-.765 1.85v10.77c0 .668.255 1.337.766 1.848.51.51 1.18.766 1.85.766h11.77c.668 0 1.337-.255 1.848-.766.51-.51.766-1.18.766-1.85v-10.77c0-.668-.255-1.337-.766-1.848A2.61 2.61 0 0 0 20.384 8zm-8.67-2.508L14 3.207v8.362c0 .27.224.5.5.5s.5-.23.5-.5V3.2l2.285 2.285a.49.49 0 0 0 .704-.001.511.511 0 0 0 0-.708l-3.14-3.14a.504.504 0 0 0-.71 0L11 4.776a.501.501 0 0 0 .71.706" fill-rule="evenodd"/></svg></span></button><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  data-action="scroll-to-responses" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--response svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M21.27 20.058c1.89-1.826 2.754-4.17 2.754-6.674C24.024 8.21 19.67 4 14.1 4 8.53 4 4 8.21 4 13.384c0 5.175 4.53 9.385 10.1 9.385 1.007 0 2-.14 2.95-.41.285.25.592.49.918.7 1.306.87 2.716 1.31 4.19 1.31.276-.01.494-.14.6-.36a.625.625 0 0 0-.052-.65c-.61-.84-1.042-1.71-1.282-2.58a5.417 5.417 0 0 1-.154-.75zm-3.85 1.324l-.083-.28-.388.12a9.72 9.72 0 0 1-2.85.424c-4.96 0-8.99-3.706-8.99-8.262 0-4.556 4.03-8.263 8.99-8.263 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32c0 .07 0 .19.02.37.03.29.1.6.19.92.19.7.49 1.4.89 2.08-.93-.14-1.83-.49-2.67-1.06-.34-.22-.88-.48-1.16-.74z"/></svg></span></button><button class="button button--chromeless u-baseColor--buttonNormal u-marginRight12"  data-action="scroll-to-responses">100</button><button class="button button--large button--dark button--chromeless is-touchIconFadeInPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon button--bookmark js-bookmarkButton"  title="Bookmark this story to read later" aria-label="Bookmark this story to read later" data-action="sign-up-prompt" data-sign-in-action="add-to-bookmarks" data-requires-token="true" data-redirect="https://medium.com/_/bookmark/p/d8904a7005d3" data-action-source="post_actions_footer"><span class="button-defaultState"><span class="svgIcon svgIcon--bookmark svgIcon--29px u-marginRight4"><svg class="svgIcon-use" width="29" height="29" ><path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4zM21 23l-5.91-3.955-.148-.107a.751.751 0 0 0-.884 0l-.147.107L8 23V6.615C8 5.725 8.725 5 9.615 5h9.77C20.275 5 21 5.725 21 6.615V23z" fill-rule="evenodd"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--bookmarkFilled svgIcon--29px u-marginRight4"><svg class="svgIcon-use" width="29" height="29" ><path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4z" fill-rule="evenodd"/></svg></span></span></button><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon js-moreActionsButton"  title="More actions" aria-label="More actions" data-action="more-actions"><span class="svgIcon svgIcon--more svgIcon--25px"><svg class="svgIcon-use" width="25" height="25"  viewBox="-480.5 272.5 21 21"><path d="M-463 284.6c.9 0 1.6-.7 1.6-1.6s-.7-1.6-1.6-1.6-1.6.7-1.6 1.6.7 1.6 1.6 1.6zm0 .9c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5-1.1 2.5-2.5 2.5zm-7-.9c.9 0 1.6-.7 1.6-1.6s-.7-1.6-1.6-1.6-1.6.7-1.6 1.6.7 1.6 1.6 1.6zm0 .9c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5-1.1 2.5-2.5 2.5zm-7-.9c.9 0 1.6-.7 1.6-1.6s-.7-1.6-1.6-1.6-1.6.7-1.6 1.6.7 1.6 1.6 1.6zm0 .9c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5-1.1 2.5-2.5 2.5z"/></svg></span></button></div></div></div></div><div class="u-maxWidth740 u-paddingTop20 u-marginTop20 u-borderTopLightest container u-paddingBottom20 u-xs-paddingBottom10 js-postAttributionFooterContainer"><div class="row js-postFooterInfo"><div class="col u-size12of12"><li class="uiScale uiScale-ui--small uiScale-caption--regular u-block u-paddingBottom18 js-cardUser"><div class="u-marginLeft20 u-floatRight"><span class="followState js-followState" data-user-id="25659e2d5b2b"><button class="button button--small u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton"  data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3" data-action-source="footer_card"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton"  data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/25659e2d5b2b" data-action-source="footer_card-25659e2d5b2b-------------------------follow_footer"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span></div><div class="u-tableCell"><a class="link u-baseColor--link avatar"   href="https://medium.com/@stowball?source=footer_card" title="Go to the profile of Matt Stow" aria-label="Go to the profile of Matt Stow" data-action-source="footer_card" data-user-id="25659e2d5b2b" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/60/60/1*rpFwDleJzuWbAwfIYzOowA.jpeg" class="avatar-image avatar-image--small" alt="Go to the profile of Matt Stow"></a></div><div class="u-tableCell u-verticalAlignMiddle u-breakWord u-paddingLeft15"><h3 class="ui-h3 u-fontSize18 u-lineHeightTighter u-marginBottom4"><a class="link link--primary u-accentColor--hoverTextNormal"   href="https://medium.com/@stowball" property="cc:attributionName" title="Go to the profile of Matt Stow" aria-label="Go to the profile of Matt Stow" rel="author cc:attributionUrl" data-user-id="25659e2d5b2b" dir="auto">Matt Stow</a></h3><p class="ui-body u-fontSize14 u-lineHeightBaseSans u-textColorDark u-marginBottom4">Lead UX Engineer at <a href="http://twitter.com/nrl" target="_blank" title="Twitter profile for @nrl">@nrl</a>. An author, speaker, artist &amp; open sourcerer <a rel="nofollow" href="http://github.com/stowball">http://github.com/stowball</a> . Devoted to #a11y, CSS, #vuejs, alt-rock, Nintendo &amp; Charlie P</p></div></li></div></div></div><div class="js-postFooterPlacements"></div><div class="u-padding0 u-clearfix u-backgroundGrayLightest u-print-hide supplementalPostContent js-responsesWrapper"></div><div class="supplementalPostContent js-heroPromo"></div></footer></article></main><aside class="u-marginAuto u-maxWidth1000 js-postLeftSidebar"><div class="u-foreground u-top0 u-transition--fadeOut300 u-fixed u-sm-hide js-postShareWidget"><ul><li class="u-marginVertical10"><div class="multirecommend js-actionMultirecommend u-flexCenter" data-post-id="d8904a7005d3" data-is-icon-29px="true" data-has-recommend-list="true" data-source="post_share_widget-----d8904a7005d3---------------------clap_sidebar"><div class="u-relative u-foreground"><button class="button button--primary button--large button--chromeless u-accentColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--darker"  data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/d8904a7005d3" data-action-source="post_share_widget-----d8904a7005d3---------------------clap_sidebar" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><g fill-rule="evenodd"><path d="M13.739 1l.761 2.966L15.261 1z"/><path d="M16.815 4.776l1.84-2.551-1.43-.471z"/><path d="M10.378 2.224l1.84 2.551-.408-3.022z"/><path d="M22.382 22.622c-1.04 1.04-2.115 1.507-3.166 1.608.168-.14.332-.29.492-.45 2.885-2.886 3.456-5.982 1.69-9.211l-1.101-1.937-.955-2.02c-.315-.676-.235-1.185.245-1.556a.836.836 0 0 1 .66-.16c.342.056.66.28.879.605l2.856 5.023c1.179 1.962 1.379 5.119-1.6 8.098m-13.29-.528l-5.02-5.02a1 1 0 0 1 .707-1.701c.255 0 .512.098.707.292l2.607 2.607a.442.442 0 0 0 .624-.624L6.11 15.04l-1.75-1.75a.998.998 0 1 1 1.41-1.413l4.154 4.156a.44.44 0 0 0 .624 0 .44.44 0 0 0 0-.624l-4.152-4.153-1.172-1.171a.998.998 0 0 1 0-1.41 1.018 1.018 0 0 1 1.41 0l1.172 1.17 4.153 4.152a.437.437 0 0 0 .624 0 .442.442 0 0 0 0-.624L8.43 9.222a.988.988 0 0 1-.291-.705.99.99 0 0 1 .29-.706 1 1 0 0 1 1.412 0l6.992 6.993a.443.443 0 0 0 .71-.501l-1.35-2.856c-.315-.676-.235-1.185.246-1.557a.85.85 0 0 1 .66-.16c.342.056.659.28.879.606L20.628 15c1.573 2.876 1.067 5.545-1.544 8.156-1.396 1.397-3.144 1.966-5.063 1.652-1.713-.286-3.463-1.248-4.928-2.714zM12.99 6.976l2.562 2.562c-.497.607-.563 1.414-.155 2.284l.265.562-4.257-4.257a.98.98 0 0 1-.117-.445c0-.267.104-.517.292-.706a1.023 1.023 0 0 1 1.41 0zm8.887 2.06c-.375-.557-.902-.916-1.486-1.011a1.738 1.738 0 0 0-1.342.332c-.376.29-.61.656-.712 1.065a2.1 2.1 0 0 0-1.095-.562 1.776 1.776 0 0 0-.992.128l-2.636-2.636a1.883 1.883 0 0 0-2.658 0 1.862 1.862 0 0 0-.478.847 1.886 1.886 0 0 0-2.671-.012 1.867 1.867 0 0 0-.503.909c-.754-.754-1.992-.754-2.703-.044a1.881 1.881 0 0 0 0 2.658c-.288.12-.605.288-.864.547a1.884 1.884 0 0 0 0 2.659l.624.622a1.879 1.879 0 0 0-.91 3.16l5.019 5.02c1.595 1.594 3.515 2.645 5.408 2.959a7.16 7.16 0 0 0 1.173.098c1.026 0 1.997-.24 2.892-.7.279.04.555.065.828.065 1.53 0 2.969-.628 4.236-1.894 3.338-3.338 3.083-6.928 1.738-9.166l-2.868-5.043z"/></g></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><g fill-rule="evenodd"><path d="M13.738 1l.762 2.966L15.262 1z"/><path d="M18.634 2.224l-1.432-.47-.408 3.022z"/><path d="M11.79 1.754l-1.431.47 1.84 2.552z"/><path d="M24.472 14.307l-3.023-5.32c-.287-.426-.689-.705-1.123-.776a1.16 1.16 0 0 0-.911.221c-.297.231-.474.515-.535.84.017.022.036.04.053.063l2.843 5.001c1.95 3.564 1.328 6.973-1.843 10.144a8.46 8.46 0 0 1-.549.501c1.205-.156 2.328-.737 3.351-1.76 3.268-3.268 3.041-6.749 1.737-8.914"/><path d="M14.58 10.887c-.156-.83.096-1.569.692-2.142L12.78 6.252c-.5-.504-1.378-.504-1.879 0-.178.18-.273.4-.329.63l4.008 4.005z"/><path d="M17.812 10.04c-.218-.323-.539-.55-.88-.606a.814.814 0 0 0-.644.153c-.176.137-.713.553-.24 1.566l1.43 3.025a.539.539 0 1 1-.868.612L9.2 7.378a.986.986 0 1 0-1.395 1.395l4.401 4.403a.538.538 0 1 1-.762.762L7.046 9.54 5.802 8.295a.99.99 0 0 0-1.396 0 .981.981 0 0 0 0 1.394l1.241 1.241 4.402 4.403a.537.537 0 0 1 0 .761.535.535 0 0 1-.762 0L4.89 11.696a.992.992 0 0 0-1.399-.003.983.983 0 0 0 0 1.395l1.855 1.854 2.763 2.765a.538.538 0 0 1-.76.761l-2.765-2.764a.982.982 0 0 0-1.395 0 .989.989 0 0 0 0 1.395l5.32 5.32c3.371 3.372 6.64 4.977 10.49 1.126C21.74 20.8 22.271 18 20.62 14.982l-2.809-4.942z"/></g></svg></span></span></button></div><span class="u-relative u-background js-actionMultirecommendCount u-marginLeft5"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton"  data-action="show-recommends" data-action-value="d8904a7005d3">9.3K</button></span></div></li><li class="u-marginVertical10 u-marginLeft3"><button class="button button--large button--dark button--chromeless is-touchIconFadeInPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon button--bookmark js-bookmarkButton"  title="Bookmark this story to read later" aria-label="Bookmark this story to read later" data-action="sign-up-prompt" data-sign-in-action="add-to-bookmarks" data-requires-token="true" data-redirect="https://medium.com/_/bookmark/p/d8904a7005d3" data-action-source="post_share_widget-----d8904a7005d3---------------------bookmark_sidebar"><span class="button-defaultState"><span class="svgIcon svgIcon--bookmark svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4zM21 23l-5.91-3.955-.148-.107a.751.751 0 0 0-.884 0l-.147.107L8 23V6.615C8 5.725 8.725 5 9.615 5h9.77C20.275 5 21 5.725 21 6.615V23z" fill-rule="evenodd"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--bookmarkFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4z" fill-rule="evenodd"/></svg></span></span></button></li><li class="u-marginVertical10 u-marginLeft3"><a class="button button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon button--dark button--chromeless"   href="https://medium.com/p/d8904a7005d3/share/twitter" title="Share on Twitter" aria-label="Share on Twitter" target="_blank" data-action-source="post_share_widget"><span class="button-defaultState"><span class="svgIcon svgIcon--twitterFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M22.053 7.54a4.474 4.474 0 0 0-3.31-1.455 4.526 4.526 0 0 0-4.526 4.524c0 .35.04.7.082 1.05a12.9 12.9 0 0 1-9.3-4.77c-.39.69-.61 1.46-.65 2.26.03 1.6.83 2.99 2.02 3.79-.72-.02-1.41-.22-2.02-.57-.01.02-.01.04 0 .08-.01 2.17 1.55 4 3.63 4.44-.39.08-.79.13-1.21.16-.28-.03-.57-.05-.81-.08.54 1.77 2.21 3.08 4.2 3.15a9.564 9.564 0 0 1-5.66 1.94c-.34-.03-.7-.06-1.05-.08 2 1.27 4.38 2.02 6.94 2.02 8.31 0 12.86-6.9 12.84-12.85.02-.24.01-.43 0-.65.89-.62 1.65-1.42 2.26-2.34-.82.38-1.69.62-2.59.72a4.37 4.37 0 0 0 1.94-2.51c-.84.53-1.81.9-2.83 1.13z"/></svg></span></span></a></li><li class="u-marginVertical10 u-marginLeft3"><a class="button button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon button--dark button--chromeless"   href="https://medium.com/p/d8904a7005d3/share/facebook" title="Share on Facebook" aria-label="Share on Facebook" target="_blank" data-action-source="post_share_widget"><span class="button-defaultState"><span class="svgIcon svgIcon--facebookSquare svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" ><path d="M23.209 5H5.792A.792.792 0 0 0 5 5.791V23.21c0 .437.354.791.792.791h9.303v-7.125H12.72v-2.968h2.375v-2.375c0-2.455 1.553-3.662 3.741-3.662 1.049 0 1.95.078 2.213.112v2.565h-1.517c-1.192 0-1.469.567-1.469 1.397v1.963h2.969l-.594 2.968h-2.375L18.11 24h5.099a.791.791 0 0 0 .791-.791V5.79a.791.791 0 0 0-.791-.79"/></svg></span></span></a></li></ul></div></aside><div class="u-fixed u-bottom0 u-width100pct u-backgroundWhite u-boxShadowTop u-borderBox u-paddingTop10 u-paddingBottom10 u-zIndexMetabar u-xs-paddingLeft10 u-xs-paddingRight10 js-stickyFooter"><div class="u-maxWidth700 u-marginAuto u-flexCenter"><div class="u-fontSize16 u-flex1 u-flexCenter"><div class="u-flex0 u-inlineBlock u-paddingRight20 u-xs-paddingRight10"><a class="link u-baseColor--link avatar u-inline"   href="https://medium.com/@stowball" data-action="show-user-card" data-action-value="25659e2d5b2b" data-action-type="hover" data-user-id="25659e2d5b2b" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/40/40/1*rpFwDleJzuWbAwfIYzOowA.jpeg" class="avatar-image avatar-image--smaller" alt="Go to the profile of Matt Stow"></a></div><div class="u-flex1 u-inlineBlock"><div class="u-xs-hide">Never miss a story from<strong> Matt Stow</strong>, when you sign up for Medium. <a class="link u-baseColor--link link--accent u-accentColor--textNormal u-accentColor--textDarken"   href="https://medium.com/@Medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg" data-action-source="sticky_footer">Learn more</a></div><div class="u-xs-show">Never miss a story from<strong> Matt Stow</strong></div></div></div><div class="u-marginLeft50 u-xs-marginAuto"><span class="followState js-followState" data-user-id="25659e2d5b2b"><button class="button u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-uiTextSemibold u-textUppercase u-fontSize12"  data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3" data-action-source="sticky_footer"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary is-active u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton u-uiTextSemibold u-textUppercase u-fontSize12"  data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/25659e2d5b2b" data-action-source="sticky_footer-25659e2d5b2b-------------------------follow_metabar"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Get updates</span></button></span></div></div></div></div></div></div><div class="loadingBar"></div><script>// <![CDATA[
window["obvInit"] = function (opt_embedded) {window["obvInit"]["embedded"] = opt_embedded; window["obvInit"]["ready"] = true;}
// ]]></script><script>// <![CDATA[
var GLOBALS = {"audioUrl":"https://d1fcbxp97j4nb2.cloudfront.net","baseUrl":"https://medium.com","buildLabel":"36616-e871aa2","currentUser":{"userId":"lo_CbkdPPxP3jx4","isVerified":false,"subscriberEmail":"","hasPastMemberships":false,"isEnrolledInHightower":false,"isEligibleForHightower":false,"hightowerLastLockedAt":0,"isWriterProgramEnrolled":false,"isWriterProgramInvited":false,"isWriterProgramOptedOut":false,"writerProgramVersion":0,"writerProgramEnrolledAt":0,"friendLinkOnboarding":0,"hasAdditionalUnlocks":false,"hasApiAccess":false},"currentUserHasUnverifiedEmail":false,"isAuthenticated":false,"isCurrentUserVerified":false,"language":"en-us","miroUrl":"https://cdn-images-1.medium.com","moduleUrls":{"base":"https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.8nlEsF_hP_2SfhpPikP2lQ.js","common-async":"https://cdn-static-1.medium.com/_/fp/gen-js/main-common-async.bundle.W2Njg06BjCV0R2Fa2VmFdQ.js","hightower":"https://cdn-static-1.medium.com/_/fp/gen-js/main-hightower.bundle.G8vx4aitv85mxhRS3fmAaA.js","home-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-home-screens.bundle.eqYiBe99aMyvB0WiT_35xg.js","misc-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-misc-screens.bundle.ao87Snx3UGFxEdQyBNCFVQ.js","notes":"https://cdn-static-1.medium.com/_/fp/gen-js/main-notes.bundle.rzrgzyZYcLla6gBcRXwDwA.js","payments":"https://cdn-static-1.medium.com/_/fp/gen-js/main-payments.bundle.KD1ieL8j3OZeE2jF1MP4ag.js","posters":"https://cdn-static-1.medium.com/_/fp/gen-js/main-posters.bundle.euPInSU3yyLWTrrDQy2TFw.js","power-readers":"https://cdn-static-1.medium.com/_/fp/gen-js/main-power-readers.bundle.gUr4tPGgSkbntCoX5zM36A.js","pubs":"https://cdn-static-1.medium.com/_/fp/gen-js/main-pubs.bundle.0cOPAuOBh57IxubymP-g8A.js","stats":"https://cdn-static-1.medium.com/_/fp/gen-js/main-stats.bundle.Ij79CfRtofcR2OTgoWys3g.js"},"previewConfig":{"weightThreshold":1,"weightImageParagraph":0.51,"weightIframeParagraph":0.8,"weightTextParagraph":0.08,"weightEmptyParagraph":0,"weightP":0.003,"weightH":0.005,"weightBq":0.003,"minPTextLength":60,"truncateBoundaryChars":20,"detectTitle":true,"detectTitleLevThreshold":0.15},"productName":"Medium","supportsEdit":true,"termsUrl":"//medium.com/policy/9db0094a1e0f","textshotHost":"textshot.medium.com","transactionId":"1550708537741:b5d63d410832","useragent":{"browser":"chrome","family":"chrome","os":"mac","version":72,"supportsDesktopEdit":true,"supportsInteract":true,"supportsView":true,"isMobile":false,"isTablet":false,"isNative":false,"supportsFileAPI":true,"isTier1":true,"clientVersion":"","unknownParagraphsBad":false,"clientChannel":"","supportsRealScrollEvents":true,"supportsVhUnits":true,"ruinsViewportSections":false,"supportsHtml5Video":true,"supportsMagicUnderlines":true,"isWebView":false,"isFacebookWebView":false,"supportsProgressiveMedia":true,"supportsPromotedPosts":true,"isBot":false,"isNativeIphone":false,"supportsCssVariables":true,"supportsVideoSections":true,"emojiSupportLevel":5,"isSearchBot":false,"isSyndicationBot":false,"isNativeAndroid":false,"supportsScrollableMetabar":true},"variants":{"allow_access":true,"allow_signup":true,"allow_test_auth":"disallow","signin_services":"twitter,facebook,google,email,google-fastidv,google-one-tap","signup_services":"twitter,facebook,google,email,google-fastidv,google-one-tap","google_sign_in_android":true,"reengagement_notification_duration":3,"browsable_stream_config_bucket":"curated-topics","enable_dedicated_series_tab_api_ios":true,"enable_post_import":true,"available_monthly_plan":"60e220181034","available_annual_plan":"2c754bcc2995","disable_ios_resume_reading_toast":true,"is_not_medium_subscriber":true,"glyph_font_set":"m2","enable_branding":true,"enable_branding_fonts":true,"enable_fastrak_rollout_new_users":true,"enable_fastrak_rollout_invited_users":true,"max_premium_content_per_user_under_metering":3,"enable_automated_mission_control_triggers":true,"enable_top_stories_for_you":true,"enable_lite_profile":true,"enable_topic_lifecycle_email":true,"enable_marketing_emails":true,"enable_truncated_rss_for_tags_and_topics":true,"enable_parsely":true,"enable_branch_io":true,"enable_ios_post_stats":true,"enable_lite_topics":true,"enable_lite_stories":true,"redis_read_write_splitting":true,"enable_tipalti_onboarding":true,"enable_annual_renewal_reminder_email":true,"enable_janky_spam_rules":"users,posts","enable_new_collaborative_filtering_data":true,"android_rating_prompt_stories_read_threshold":2,"enable_smart_meter_without_incentive":true,"stripe_v3":true,"enable_google_one_tap":true,"enable_email_sign_in_captcha":true,"enable_primary_topic_for_mobile":true,"enable_prereg_post_post_recs":true,"store_moc_depth_in_session":true,"less_aggressive_smart_meter":true,"enable_revamped_welcome_nudge_email":true,"enable_popular_topic_sections_in_digest":true},"xsrfToken":"","iosAppId":"828256236","supportEmail":"yourfriends@medium.com","fp":{"/icons/monogram-mask.svg":"https://cdn-static-1.medium.com/_/fp/icons/monogram-mask.KPLCSFEZviQN0jQ7veN2RQ.svg","/icons/favicon-dev-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-dev-editor.YKKRxBO8EMvIqhyCwIiJeQ.ico","/icons/favicon-hatch-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-hatch-editor.BuEyHIqlyh2s_XEk4Rl32Q.ico","/icons/favicon-medium-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-medium-editor.PiakrZWB7Yb80quUVQWM6g.ico"},"authBaseUrl":"https://medium.com","imageUploadSizeMb":25,"isAuthDomainRequest":true,"algoliaApiEndpoint":"https://MQ57UUUQZ2-dsn.algolia.net","algoliaAppId":"MQ57UUUQZ2","algoliaSearchOnlyApiKey":"394474ced050e3911ae2249ecc774921","iosAppStoreUrl":"https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8","iosAppLinkBaseUrl":"medium:","algoliaIndexPrefix":"medium_","androidPlayStoreUrl":"https://play.google.com/store/apps/details?id=com.medium.reader","googleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","androidPackage":"com.medium.reader","androidPlayStoreMarketScheme":"market://details?id=com.medium.reader","googleAuthUri":"https://accounts.google.com/o/oauth2/auth","androidScheme":"medium","layoutData":{"useDynamicScripts":false,"googleAnalyticsTrackingCode":"UA-24232453-2","jsShivUrl":"https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js","useDynamicCss":false,"faviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico","faviconImageId":"1*8I-HPL0bfoIzGied-dzOvA.png","fontSets":[{"id":8,"url":"https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m2.css"},{"id":11,"url":"https://glyph.medium.com/css/m2.css"},{"id":9,"url":"https://glyph.medium.com/css/mkt.css"}],"editorFaviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium-editor.3Y6xpZ-0FSdWDnPM3hSBIA.ico","glyphUrl":"https://glyph.medium.com"},"authBaseUrlRev":"moc.muidem//:sptth","isDnt":false,"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","archiveUploadSizeMb":100,"paymentData":{"currencies":{"1":{"label":"US Dollar","external":"usd"}},"countries":{"1":{"label":"United States of America","external":"US"}},"accountTypes":{"1":{"label":"Individual","external":"individual"},"2":{"label":"Company","external":"company"}}},"previewConfig2":{"weightThreshold":1,"weightImageParagraph":0.05,"raiseImage":true,"enforceHeaderHierarchy":true,"isImageInsetRight":true},"isAmp":false,"iosScheme":"medium","isSwBoot":false,"lightstep":{"accessToken":"ce5be895bef60919541332990ac9fef2","carrier":"{\"ot-tracer-spanid\":\"3d19521d46a351de\",\"ot-tracer-traceid\":\"3366e4b80aaf8c83\",\"ot-tracer-sampled\":\"true\"}","host":"collector-medium.lightstep.com"},"facebook":{"key":"542599432471018","namespace":"medium-com","scope":{"default":["public_profile","email"],"connect":["public_profile","email"],"login":["public_profile","email"],"share":["public_profile","email"]}},"editorsPicksTopicId":"3985d2a191c5","popularOnMediumTopicId":"9d34e48ecf94","memberContentTopicId":"13d7efd82fb2","audioContentTopicId":"3792abbd134","brandedSequenceId":"7d337ddf1941","isDoNotAuth":false,"goldfinchUrl":"https://goldfinch.medium.com","buggle":{"url":"https://buggle.medium.com","videoUrl":"https://cdn-videos-1.medium.com","audioUrl":"https://cdn-audio-1.medium.com"},"referrerType":5,"isMeteredOut":false,"meterConfig":{"maxUnlockCount":3,"windowLength":"MONTHLY"},"partnerProgramEmail":"partnerprogram@medium.com","userResearchPrompts":[{"promptId":"lo_post_page_4","type":0,"url":"www.calendly.com"},{"promptId":"lo_home_page","type":1,"url":"www.calendly.com"},{"promptId":"lo_profile_page","type":2,"url":"www.calendly.com"}],"recaptchaKey":"6LdAokEUAAAAAC7seICd4vtC8chDb3jIXDQulyUJ","signinWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"countryCode":"US","bypassMeter":false,"branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","paypal":{"clientMode":"production","oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com/redeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"}},"collectionConfig":{"mediumOwnedAndOperatedCollectionIds":["544c7006046e // Human Parts"]}}
// ]]></script><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.8nlEsF_hP_2SfhpPikP2lQ.js" async></script><script>// <![CDATA[
window["obvInit"]({"value":{"id":"d8904a7005d3","versionId":"e1cc3968750f","creatorId":"25659e2d5b2b","creator":{"userId":"25659e2d5b2b","name":"Matt Stow","username":"stowball","createdAt":1414377050931,"imageId":"1*rpFwDleJzuWbAwfIYzOowA.jpeg","backgroundImageId":"","bio":"Lead UX Engineer at @nrl. An author, speaker, artist & open sourcerer http://github.com/stowball . Devoted to #a11y, CSS, #vuejs, alt-rock, Nintendo & Charlie P","twitterScreenName":"stowball","socialStats":{"userId":"25659e2d5b2b","usersFollowedCount":233,"usersFollowedByCount":1430,"type":"SocialStats"},"social":{"userId":"lo_CbkdPPxP3jx4","targetUserId":"25659e2d5b2b","type":"Social"},"facebookAccountId":"","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"type":"User"},"homeCollectionId":"","title":"A Dummy’s Guide to Redux and Thunk in React","detectedLanguage":"en","latestVersion":"e1cc3968750f","latestPublishedVersion":"e1cc3968750f","hasUnpublishedEdits":false,"latestRev":255,"createdAt":1479195420816,"updatedAt":1529558768023,"acceptedAt":0,"firstPublishedAt":1479195644091,"latestPublishedAt":1493878033353,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully…","bodyModel":{"paragraphs":[{"name":"b7a3","type":3,"text":"A Dummy’s Guide to Redux and Thunk in React","markups":[]},{"name":"e080","type":1,"text":"If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully this will help.","markups":[{"type":3,"start":20,"end":39,"href":"http://redux.js.org/","title":"","rel":"","anchorType":0},{"type":3,"start":41,"end":61,"href":"https://egghead.io/courses/getting-started-with-redux","title":"","rel":"","anchorType":0},{"type":3,"start":63,"end":79,"href":"https://www.learnredux.com/","title":"","rel":"","anchorType":0}]},{"name":"d139","type":1,"text":"It took me a few attempts at using Redux before it clicked, so I thought I’d write down the process of converting an existing application that fetches JSON to use Redux and Redux Thunk. If you don’t know what Thunk is, don’t worry too much, but we’ll use it to make asynchronous calls in the “Redux way”.","markups":[{"type":3,"start":173,"end":184,"href":"https://github.com/gaearon/redux-thunk","title":"","rel":"","anchorType":0}]},{"name":"97a4","type":1,"text":"This tutorial assumes you have a basic grasp of React and ES6/2015, but it should hopefully be easy enough to follow along regardless.","markups":[]},{"name":"75b4","type":3,"text":"The non-Redux way","markups":[]},{"name":"087a","type":1,"text":"Let’s start with creating a React component in components/ItemList.js to fetch and display a list of items.","markups":[{"type":10,"start":47,"end":69}]},{"name":"b3b8","type":3,"text":"Laying the foundations","markups":[]},{"name":"031c","type":1,"text":"First we’ll setup a static component with a state that contains various items to output, and 2 boolean states to render something different when it's loading or errored respectively.","markups":[{"type":10,"start":44,"end":49},{"type":10,"start":72,"end":77}]},{"name":"35c6","type":8,"text":"import React, { Component } from 'react';","markups":[]},{"name":"c439","type":8,"text":"class ItemList extends Component {\n    constructor() {\n        super();","markups":[]},{"name":"d9f4","type":8,"text":"        this.state = {\n            items: [\n                {\n                    id: 1,\n                    label: 'List item 1'\n                },\n                {\n                    id: 2,\n                    label: 'List item 2'\n                },\n                {\n                    id: 3,\n                    label: 'List item 3'\n                },\n                {\n                    id: 4,\n                    label: 'List item 4'\n                }\n            ],\n            hasErrored: false,\n            isLoading: false\n        };\n    }","markups":[]},{"name":"43f1","type":8,"text":"    render() {\n        if (this.state.hasErrored) {\n            return \x3cp\x3eSorry! There was an error loading the items\x3c/p\x3e;\n        }","markups":[]},{"name":"d5d9","type":8,"text":"        if (this.state.isLoading) {\n            return \x3cp\x3eLoading…\x3c/p\x3e;\n        }","markups":[]},{"name":"f223","type":8,"text":"        return (\n            \x3cul\x3e\n                {this.state.items.map((item) =\x3e (\n                    \x3cli key={item.id}\x3e\n                        {item.label}\n                    \x3c/li\x3e\n                ))}\n            \x3c/ul\x3e\n        );\n    }\n}","markups":[]},{"name":"57bd","type":8,"text":"export default ItemList;","markups":[]},{"name":"17ab","type":1,"text":"It may not seem like much, but this is a good start.","markups":[]},{"name":"2d03","type":1,"text":"When rendered, the component should output 4 list items, but if you were to set isLoading or hasErrored to true, a relevant \x3cp\x3e\x3c/p\x3e would be output instead.","markups":[{"type":10,"start":80,"end":89},{"type":10,"start":93,"end":103},{"type":10,"start":107,"end":111},{"type":10,"start":124,"end":131}]},{"name":"67a0","type":3,"text":"Making it dynamic","markups":[]},{"name":"5b0d","type":1,"text":"Hard-coding the items doesn’t make for a very useful component, so let’s fetch the items from a JSON API, which will also allow us to set isLoading and hasErrored as appropriate.","markups":[{"type":10,"start":83,"end":88},{"type":10,"start":138,"end":147},{"type":10,"start":152,"end":162}]},{"name":"1083","type":1,"text":"The response will be identical to our hard-coded list of items, but in the real world, you could pull in a list of best-selling books, latest blog posts, or whatever suits your application.","markups":[]},{"name":"8caa","type":1,"text":"To fetch the items, we’re going to use the aptly named Fetch API. Fetch makes making requests much easier than the classic XMLHttpRequest and returns a promise of the resolved response (which is important to Thunk). Fetch isn’t available in all browsers, so you’ll need to add it as a dependency to your project with:","markups":[{"type":3,"start":55,"end":64,"href":"https://developer.mozilla.org/en/docs/Web/API/Fetch_API","title":"","rel":"","anchorType":0},{"type":3,"start":123,"end":137,"href":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest","title":"","rel":"","anchorType":0}]},{"name":"f269","type":8,"text":"npm install whatwg-fetch --save","markups":[]},{"name":"a0e5","type":1,"text":"The conversion is actually quite simple.","markups":[]},{"name":"cbd0","type":9,"text":"First we’ll set our initial items to an empty array []","markups":[{"type":10,"start":28,"end":33},{"type":10,"start":52,"end":54}]},{"name":"b01d","type":9,"text":"Now we’ll add a method to fetch the data and set the loading and error states:","markups":[]},{"name":"f345","type":8,"text":"fetchData(url) {\n    this.setState({ isLoading: true });","markups":[]},{"name":"199e","type":8,"text":"    fetch(url)\n        .then((response) =\x3e {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }","markups":[]},{"name":"6389","type":8,"text":"            this.setState({ isLoading: false });","markups":[]},{"name":"964b","type":8,"text":"            return response;\n        })\n        .then((response) =\x3e response.json())\n        .then((items) =\x3e this.setState({ items })) // ES6 property value shorthand for { items: items }\n        .catch(() =\x3e this.setState({ hasErrored: true }));\n}","markups":[]},{"name":"0f18","type":9,"text":"Then we’ll call it when the component mounts:","markups":[]},{"name":"217c","type":8,"text":"componentDidMount() {\n  this.fetchData('http://5826ed963900d612000138bd.mockapi.io/items');\n}","markups":[]},{"name":"f587","type":1,"text":"Which leaves us with (unchanged lines omitted):","markups":[{"type":2,"start":21,"end":46}]},{"name":"9c92","type":8,"text":"class ItemList extends Component {\n    constructor() {\n        this.state = {\n            items: [],\n        };\n    }","markups":[]},{"name":"7b2a","type":8,"text":"    fetchData(url) {\n        this.setState({ isLoading: true });","markups":[]},{"name":"5147","type":8,"text":"        fetch(url)\n            .then((response) =\x3e {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }","markups":[]},{"name":"7f1d","type":8,"text":"                this.setState({ isLoading: false });","markups":[]},{"name":"ca05","type":8,"text":"                return response;\n            })\n            .then((response) =\x3e response.json())\n            .then((items) =\x3e this.setState({ items }))\n            .catch(() =\x3e this.setState({ hasErrored: true }));\n    }","markups":[]},{"name":"2eed","type":8,"text":"    componentDidMount() {\n        this.fetchData('http://5826ed963900d612000138bd.mockapi.io/items');\n    }","markups":[]},{"name":"c93e","type":8,"text":"    render() {\n    }\n}","markups":[]},{"name":"67b4","type":1,"text":"And that’s it. Your component now fetches the items from a REST endpoint! You should hopefully see \"Loading…\"appear briefly before the 4 list items. If you pass in a broken URL to fetchData you should see our error message.","markups":[{"type":10,"start":46,"end":51},{"type":10,"start":99,"end":109},{"type":10,"start":180,"end":189}]},{"name":"2aec","type":1,"text":"However, in reality, a component shouldn’t include logic to fetch data, and data shouldn’t be stored in a component’s state, so this is where Redux comes in.","markups":[]},{"name":"9abd","type":3,"text":"Converting to Redux","markups":[]},{"name":"f0fa","type":1,"text":"To start, we need to add Redux, React Redux and Redux Thunk as dependencies of our project so we can use them. We can do that with:","markups":[]},{"name":"2b31","type":8,"text":"npm install redux react-redux redux-thunk --save","markups":[]},{"name":"eb55","type":3,"text":"Understanding Redux","markups":[]},{"name":"098b","type":1,"text":"There are a few core principles to Redux which we need to understand:","markups":[]},{"name":"2613","type":10,"text":"There is 1 global state object that manages the state for your entire application. In this example, it will behave identically to our initial component’s state. It is the single source of truth.","markups":[{"type":2,"start":171,"end":193}]},{"name":"4908","type":10,"text":"The only way to modify the state is through emitting an action, which is an object that describes what should change. Action Creators are the functions that are dispatched to emit a change – all they do is return an action.","markups":[{"type":10,"start":161,"end":169},{"type":10,"start":206,"end":212}]},{"name":"4ef8","type":10,"text":"When an action is dispatched, a Reducer is the function that actually changes the state appropriate to that action – or returns the existing state if the action is not applicable to that reducer.","markups":[{"type":10,"start":18,"end":26}]},{"name":"b330","type":10,"text":"Reducers are “pure functions”. They should not have any side-effects nor mutate the state — they must return a modified copy.","markups":[]},{"name":"28d7","type":10,"text":"Individual reducers are combined into a single rootReducer to create the discrete properties of the state.","markups":[{"type":10,"start":47,"end":58}]},{"name":"4112","type":10,"text":"The Store is the thing that brings it all together: it represents the state by using the rootReducer, any middleware (Thunk in our case), and allows you to actually dispatch actions.","markups":[{"type":10,"start":89,"end":100},{"type":10,"start":165,"end":173}]},{"name":"376c","type":10,"text":"For using Redux in React, the \x3cProvider /\x3e component wraps the entire application and passes the storedown to all children.","markups":[{"type":10,"start":30,"end":42},{"type":10,"start":97,"end":102}]},{"name":"7150","type":1,"text":"This should all become clearer as we start to convert our application to use Redux.","markups":[]},{"name":"0676","type":3,"text":"Designing our state","markups":[]},{"name":"6794","type":1,"text":"From the work we’ve already done, we know that our state needs to have 3 properties: items, hasErrored and isLoading for this application to work as expected under all circumstances, which correlates to needing 3 unique actions.","markups":[{"type":10,"start":85,"end":90},{"type":10,"start":92,"end":102},{"type":10,"start":107,"end":116}]},{"name":"1119","type":1,"text":"Now, here is why Action Creators are different to Actions and do not necessarily have a 1:1 relationship: we need a fourth action creator that calls our 3 other action (creators) depending on the status of fetching the data. This fourth action creator is almost identical to our original fetchData() method, but instead of directly setting the state with this.setState({ isLoading: true }), we'll dispatch an action to do the same: dispatch(isLoading(true)).","markups":[{"type":10,"start":288,"end":299},{"type":10,"start":355,"end":389},{"type":10,"start":397,"end":405},{"type":10,"start":432,"end":457}]},{"name":"c0c7","type":3,"text":"Creating our actions","markups":[]},{"name":"6458","type":1,"text":"Let’s create an actions/items.js file to contain our action creators. We'll start with our 3 simple actions.","markups":[{"type":10,"start":16,"end":32}]},{"name":"e60a","type":8,"text":"export function itemsHasErrored(bool) {\n    return {\n        type: 'ITEMS_HAS_ERRORED',\n        hasErrored: bool\n    };\n}","markups":[]},{"name":"0da1","type":8,"text":"export function itemsIsLoading(bool) {\n    return {\n        type: 'ITEMS_IS_LOADING',\n        isLoading: bool\n    };\n}","markups":[]},{"name":"6c5e","type":8,"text":"export function itemsFetchDataSuccess(items) {\n    return {\n        type: 'ITEMS_FETCH_DATA_SUCCESS',\n        items\n    };\n}","markups":[]},{"name":"9d22","type":1,"text":"As mentioned before, action creators are functions that return an action. We export each one so we can use them elsewhere in our codebase.","markups":[{"type":10,"start":77,"end":83}]},{"name":"5236","type":1,"text":"The first 2 action creators take a bool (true/false) as their argument and return an object with a meaningful type and the bool assigned to the appropriate property.","markups":[{"type":10,"start":35,"end":39},{"type":10,"start":41,"end":45},{"type":10,"start":46,"end":51},{"type":10,"start":110,"end":114},{"type":10,"start":123,"end":127}]},{"name":"b8bb","type":1,"text":"The third, itemsFetchDataSuccess(), will be called when the data has been successfully fetched, with the data passed to it as items. Through the magic of ES6 property value shorthands, we'll return an object with a property called items whose value will be the array of items;","markups":[{"type":10,"start":11,"end":34},{"type":10,"start":126,"end":131},{"type":10,"start":231,"end":236},{"type":10,"start":270,"end":275}]},{"name":"82d1","type":1,"text":"Note: that the value you use for type and the name of the other property that is returned is important, because you will re-use them in your reducers","markups":[{"type":10,"start":33,"end":37},{"type":2,"start":0,"end":149}]},{"name":"c6ce","type":1,"text":"Now that we have the 3 actions which will represent our state, we’ll convert our original component’s fetchDatamethod to an itemsFetchData() action creator.","markups":[{"type":10,"start":102,"end":111},{"type":10,"start":124,"end":140}]},{"name":"11c2","type":1,"text":"By default, Redux action creators don’t support asynchronous actions like fetching data, so here’s where we utilise Redux Thunk. Thunk allows you to write action creators that return a function instead of an action. The inner function can receive the store methods dispatch and getState as parameters, but we'll just use dispatch.","markups":[{"type":10,"start":265,"end":273},{"type":10,"start":278,"end":286},{"type":10,"start":321,"end":329}]},{"name":"ecc6","type":1,"text":"A real simple example would be to manually trigger itemsHasErrored() after 5 seconds.","markups":[{"type":10,"start":51,"end":68}]},{"name":"4f3e","type":8,"text":"export function errorAfterFiveSeconds() {\n    // We return a function instead of an action object\n    return (dispatch) =\x3e {\n        setTimeout(() =\x3e {\n            // This function is able to dispatch other action creators\n            dispatch(itemsHasErrored(true));\n        }, 5000);\n    };\n}","markups":[]},{"name":"0869","type":1,"text":"Now we know what a thunk is, we can write itemsFetchData().","markups":[{"type":10,"start":42,"end":58}]},{"name":"7a79","type":8,"text":"export function itemsFetchData(url) {\n    return (dispatch) =\x3e {\n        dispatch(itemsIsLoading(true));","markups":[]},{"name":"fd7c","type":8,"text":"        fetch(url)\n            .then((response) =\x3e {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }","markups":[]},{"name":"6515","type":8,"text":"                dispatch(itemsIsLoading(false));","markups":[]},{"name":"0504","type":8,"text":"                return response;\n            })\n            .then((response) =\x3e response.json())\n            .then((items) =\x3e dispatch(itemsFetchDataSuccess(items)))\n            .catch(() =\x3e dispatch(itemsHasErrored(true)));\n    };\n}","markups":[]},{"name":"7f94","type":3,"text":"Creating our reducers","markups":[]},{"name":"fd53","type":1,"text":"With our action creators defined, we now write reducers that take these actions and return a new state of our application.","markups":[]},{"name":"f66a","type":1,"text":"Note: In Redux, all reducers get called regardless of the action, so inside each one you have to return the original state if the action is not applicable.","markups":[{"type":10,"start":117,"end":122},{"type":2,"start":0,"end":155}]},{"name":"ae94","type":1,"text":"Each reducer takes 2 parameters: the previous state (state) and an action object. We can also use an ES6 feature called default parameters to set the default initial state.","markups":[{"type":10,"start":53,"end":58},{"type":10,"start":67,"end":73},{"type":10,"start":166,"end":171}]},{"name":"aa8e","type":1,"text":"Inside each reducer, we use a switch statement to determine when an action.type matches. While it may seem unnecessary in these simple reducers, your reducers could theoretically have a lot of conditions, so if/else if/else will get messy fast.","markups":[{"type":10,"start":30,"end":36},{"type":10,"start":68,"end":79},{"type":10,"start":208,"end":210},{"type":10,"start":211,"end":218},{"type":10,"start":219,"end":223}]},{"name":"6066","type":1,"text":"If the action.type matches, then we return the relevant property of action. As mentioned earlier, the type and action[propertyName] is what was defined in your action creators.","markups":[{"type":10,"start":7,"end":18},{"type":10,"start":68,"end":74},{"type":10,"start":102,"end":106},{"type":10,"start":111,"end":131}]},{"name":"c6e4","type":1,"text":"OK, knowing this, let’s create our items reducers in reducers/items.js.","markups":[{"type":10,"start":53,"end":70}]},{"name":"3d5a","type":8,"text":"export function itemsHasErrored(state = false, action) {\n    switch (action.type) {\n        case 'ITEMS_HAS_ERRORED':\n            return action.hasErrored;","markups":[]},{"name":"8594","type":8,"text":"        default:\n            return state;\n    }\n}","markups":[]},{"name":"3a71","type":8,"text":"export function itemsIsLoading(state = false, action) {\n    switch (action.type) {\n        case 'ITEMS_IS_LOADING':\n            return action.isLoading;","markups":[]},{"name":"6265","type":8,"text":"        default:\n            return state;\n    }\n}","markups":[]},{"name":"fb47","type":8,"text":"export function items(state = [], action) {\n    switch (action.type) {\n        case 'ITEMS_FETCH_DATA_SUCCESS':\n            return action.items;","markups":[]},{"name":"1174","type":8,"text":"        default:\n            return state;\n    }\n}","markups":[]},{"name":"9c86","type":1,"text":"Notice how each reducer is named after the resulting store’s state property, with the action.type not necessarily needing to correspond. The first 2 reducers hopefully make complete sense, but the last, items(), is slightly different.","markups":[{"type":10,"start":86,"end":97},{"type":10,"start":203,"end":210}]},{"name":"3593","type":1,"text":"This is because it could have multiple conditions which would always return an array of items: it could return all in the case of a fetch success, it could return a subset of items after a delete action is dispatched, or it could return an empty array if everything is deleted.","markups":[{"type":10,"start":88,"end":93},{"type":10,"start":175,"end":180},{"type":10,"start":206,"end":214}]},{"name":"3850","type":1,"text":"To re-iterate, every reducer will return a discrete property of the state, regardless of how many conditions are inside that reducer. That initially took me a while to get my head around.","markups":[]},{"name":"5caf","type":1,"text":"With the individual reducers created, we need to combine them into a rootReducer to create a single object.","markups":[{"type":10,"start":69,"end":80}]},{"name":"1745","type":1,"text":"Create a new file at reducers/index.js.","markups":[{"type":10,"start":21,"end":38}]},{"name":"1e3f","type":8,"text":"import { combineReducers } from 'redux';\nimport { items, itemsHasErrored, itemsIsLoading } from './items';","markups":[]},{"name":"2524","type":8,"text":"export default combineReducers({\n    items,\n    itemsHasErrored,\n    itemsIsLoading\n});","markups":[]},{"name":"6bc2","type":1,"text":"We import each of the reducers from items.js and export them with Redux's combineReducers(). As our reducer names are identical to what we want to use for a store's property names, we can use the ES6 shorthand.","markups":[{"type":10,"start":36,"end":44},{"type":10,"start":74,"end":91}]},{"name":"10b1","type":1,"text":"Notice how I intentionally prefixed my reducer names, so that when the application grows in complexity, I’m not constrained by having a “global” hasErrored or isLoading property. You may have many different features that could error or be in a loading state, so prefixing the imports and then exporting those will give your application's state greater granularity and flexibility. For example:","markups":[{"type":10,"start":145,"end":155},{"type":10,"start":159,"end":168}]},{"name":"62b3","type":8,"text":"import { combineReducers } from 'redux';\nimport { items, itemsHasErrored, itemsIsLoading } from './items';\nimport { posts, postsHasErrored, postsIsLoading } from './posts';","markups":[]},{"name":"50ee","type":8,"text":"export default combineReducers({\n    items,\n    itemsHasErrored,\n    itemsIsLoading,\n    posts,\n    postsHasErrored,\n    postsIsLoading\n});","markups":[]},{"name":"573b","type":1,"text":"Alternatively, you could alias the methods on import, but I prefer consistency across the board.","markups":[{"type":10,"start":46,"end":52}]},{"name":"bf5e","type":3,"text":"Configure the store and provide it to your app","markups":[]},{"name":"b826","type":1,"text":"This is pretty straightforward. Let’s create store/configureStore.js with:","markups":[{"type":10,"start":45,"end":68}]},{"name":"0458","type":8,"text":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';","markups":[]},{"name":"9ed1","type":8,"text":"export default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}","markups":[]},{"name":"5b37","type":1,"text":"Now change our app’s index.js to include \x3cProvider /\x3e, configureStore, set up our store and wrap our app (\x3cItemList /\x3e) to pass the store down as props:","markups":[{"type":10,"start":21,"end":29},{"type":10,"start":41,"end":53},{"type":10,"start":55,"end":69},{"type":10,"start":82,"end":87},{"type":10,"start":106,"end":118},{"type":10,"start":132,"end":137},{"type":10,"start":146,"end":151}]},{"name":"da88","type":8,"text":"import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';","markups":[]},{"name":"3f2f","type":8,"text":"import ItemList from './components/ItemList';","markups":[]},{"name":"c2cb","type":8,"text":"const store = configureStore(); // You can also pass in an initialState here","markups":[]},{"name":"0a4b","type":8,"text":"render(\n    \x3cProvider store={store}\x3e\n        \x3cItemList /\x3e\n    \x3c/Provider\x3e,\n    document.getElementById('app')\n);","markups":[]},{"name":"5f29","type":1,"text":"I know, it’s taken quite a bit of effort to get to this stage, but with the set up complete, we can now modify our component to make use of what we’ve done.","markups":[]},{"name":"852e","type":3,"text":"Converting our component to use the Redux store and methods","markups":[]},{"name":"06ae","type":1,"text":"Let’s jump back in to components/ItemList.js.","markups":[{"type":10,"start":22,"end":44}]},{"name":"28c8","type":1,"text":"At the top of the file, import what we need:","markups":[{"type":10,"start":24,"end":30}]},{"name":"899c","type":8,"text":"import { connect } from 'react-redux';\nimport { itemsFetchData } from '../actions/items';","markups":[]},{"name":"f375","type":1,"text":"connect is what allows us to connect a component to Redux's store, and itemsFetchData is the action creator we wrote earlier. We only need to import this one action creator, as it handles dispatching the other actions.","markups":[{"type":10,"start":0,"end":7},{"type":10,"start":71,"end":85},{"type":10,"start":188,"end":196}]},{"name":"bba9","type":1,"text":"After our component’s class definition, we're going to map Redux's state and the dispatching of our action creator to props.","markups":[{"type":10,"start":22,"end":27}]},{"name":"48e3","type":1,"text":"We create a function that accepts state and then returns an object of props. In a simple component like this, I remove the prefixing for the has/is props as it’s obvious that they're related to items.","markups":[{"type":10,"start":34,"end":39},{"type":10,"start":141,"end":144},{"type":10,"start":145,"end":147},{"type":10,"start":194,"end":199}]},{"name":"5488","type":8,"text":"const mapStateToProps = (state) =\x3e {\n    return {\n        items: state.items,\n        hasErrored: state.itemsHasErrored,\n        isLoading: state.itemsIsLoading\n    };\n};","markups":[]},{"name":"3c48","type":1,"text":"And then we need another function to be able to dispatch our itemsFetchData() action creator with a prop.","markups":[{"type":10,"start":48,"end":56},{"type":10,"start":61,"end":77}]},{"name":"5c2e","type":8,"text":"const mapDispatchToProps = (dispatch) =\x3e {\n    return {\n        fetchData: (url) =\x3e dispatch(itemsFetchData(url))\n    };\n};","markups":[]},{"name":"a304","type":1,"text":"Again, I’ve removed the items prefix from the returned object property. Here fetchData is a function that accepts a url parameter and returns dispatching itemsFetchData(url).","markups":[{"type":10,"start":24,"end":29},{"type":10,"start":77,"end":86},{"type":10,"start":116,"end":119},{"type":10,"start":142,"end":150},{"type":10,"start":154,"end":173}]},{"name":"df43","type":1,"text":"Now, these 2 mapStateToProps() and mapDispatchToProps() don't do anything yet, so we need to change our final export line to:","markups":[{"type":10,"start":13,"end":30},{"type":10,"start":35,"end":55},{"type":10,"start":110,"end":116}]},{"name":"2f70","type":8,"text":"export default connect(mapStateToProps, mapDispatchToProps)(ItemList);","markups":[]},{"name":"4105","type":1,"text":"This connects our ItemList to Redux while mapping the props for us to use.","markups":[{"type":10,"start":5,"end":12},{"type":10,"start":18,"end":26}]},{"name":"99fe","type":1,"text":"The final step is to convert our component to use props instead of state, and to remove the leftovers.","markups":[{"type":10,"start":50,"end":55},{"type":10,"start":67,"end":72}]},{"name":"f10d","type":9,"text":"Delete the constructor() {} and fetchData() {} methods as they're unnecessary now.","markups":[{"type":10,"start":11,"end":27},{"type":10,"start":32,"end":46}]},{"name":"43b6","type":9,"text":"Change this.fetchData() in componentDidMount() to this.props.fetchData().","markups":[{"type":10,"start":7,"end":23},{"type":10,"start":27,"end":46},{"type":10,"start":50,"end":72}]},{"name":"1126","type":9,"text":"Change this.state.X to this.props.X for .hasErrored, .isLoading and .items.","markups":[{"type":10,"start":7,"end":19},{"type":10,"start":23,"end":35},{"type":10,"start":40,"end":51},{"type":10,"start":53,"end":63},{"type":10,"start":68,"end":74}]},{"name":"a3a1","type":1,"text":"Your component should now look like this:","markups":[]},{"name":"8c8f","type":8,"text":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { itemsFetchData } from '../actions/items';","markups":[]},{"name":"8ef3","type":8,"text":"class ItemList extends Component {\n    componentDidMount() {\n        this.props.fetchData('http://5826ed963900d612000138bd.mockapi.io/items');\n    }","markups":[]},{"name":"781f","type":8,"text":"    render() {\n        if (this.props.hasErrored) {\n            return \x3cp\x3eSorry! There was an error loading the items\x3c/p\x3e;\n        }","markups":[]},{"name":"17db","type":8,"text":"        if (this.props.isLoading) {\n            return \x3cp\x3eLoading…\x3c/p\x3e;\n        }","markups":[]},{"name":"1df3","type":8,"text":"        return (\n            \x3cul\x3e\n                {this.props.items.map((item) =\x3e (\n                    \x3cli key={item.id}\x3e\n                        {item.label}\n                    \x3c/li\x3e\n                ))}\n            \x3c/ul\x3e\n        );\n    }\n}","markups":[]},{"name":"2ce6","type":8,"text":"const mapStateToProps = (state) =\x3e {\n    return {\n        items: state.items,\n        hasErrored: state.itemsHasErrored,\n        isLoading: state.itemsIsLoading\n    };\n};","markups":[]},{"name":"ef7e","type":8,"text":"const mapDispatchToProps = (dispatch) =\x3e {\n    return {\n        fetchData: (url) =\x3e dispatch(itemsFetchData(url))\n    };\n};","markups":[]},{"name":"0faf","type":8,"text":"export default connect(mapStateToProps, mapDispatchToProps)(ItemList);","markups":[]},{"name":"6826","type":1,"text":"And that’s it! The application now uses Redux and Redux Thunk to fetch and display the data!","markups":[]},{"name":"3658","type":1,"text":"That wasn’t too difficult, was it?","markups":[]},{"name":"48da","type":1,"text":"And you’re now a Redux master :D","markups":[]},{"name":"9aa5","type":3,"text":"What next?","markups":[]},{"name":"1ea8","type":1,"text":"I’ve put all of this code up on GitHub, with commits for each step. I want you to clone it, run it and understand it, then add the ability for the user to delete individual list items based on the item’s index.","markups":[{"type":10,"start":204,"end":209},{"type":3,"start":16,"end":38,"href":"https://github.com/stowball/dummys-guide-to-redux-and-thunk-react","title":"","rel":"","anchorType":0}]},{"name":"96f1","type":1,"text":"I haven’t yet really mentioned that in Redux, the state is immutable, which means you can’t modify it, so have to return a new state in your reducers instead. The 3 reducers we wrote above were simple and “just worked”, but deleting items from an array requires an approach that you may not be familiar with.","markups":[{"type":2,"start":50,"end":68}]},{"name":"fe76","type":1,"text":"You can no longer use Array.prototype.splice() to remove items from an array, as that will mutate the original array. Dan explains how to remove an element from an array in this video, but if you get stuck, you can check out (pun intended) the delete-items branch for the solution.","markups":[{"type":10,"start":22,"end":46},{"type":10,"start":244,"end":256},{"type":3,"start":118,"end":183,"href":"https://egghead.io/lessons/javascript-redux-avoiding-array-mutations-with-concat-slice-and-spread","title":"","rel":"","anchorType":0}]},{"name":"5dfb","type":1,"text":"I really hope that this has clarified the concept of Redux and Thunk and how you might go about converting an existing React application to use them. I know that writing this has solidified my understanding of it, so I’m very happy to have done it.","markups":[]},{"name":"6c3f","type":1,"text":"I’d still recommend reading the Redux docs, watching Dan’s videos, and re-doing Wes’ course as you should hopefully now be able to understand some of the other more complex and deeper principles.","markups":[{"type":3,"start":20,"end":42,"href":"http://redux.js.org/","title":"","rel":"","anchorType":0},{"type":3,"start":44,"end":65,"href":"https://egghead.io/courses/getting-started-with-redux","title":"","rel":"","anchorType":0},{"type":3,"start":71,"end":91,"href":"https://www.learnredux.com/","title":"","rel":"","anchorType":0}]},{"name":"a346","type":1,"text":"This article has been cross-posted on Codepen for better code formatting.","markups":[{"type":3,"start":5,"end":45,"href":"http://codepen.io/stowball/post/a-dummy-s-guide-to-redux-and-thunk-in-react","title":"","rel":"","anchorType":0}]}],"sections":[{"name":"6e97","startIndex":0}]},"postDisplay":{"coverless":true}},"virtuals":{"allowNotes":true,"previewImage":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"wordCount":2731,"imageCount":0,"readingTime":10.30566037735849,"subtitle":"If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully…","usersBySocialRecommends":[],"noIndex":false,"recommends":1364,"socialRecommends":[],"isBookmarked":false,"tags":[{"slug":"redux","name":"Redux","postCount":4068,"metadata":{"postCount":4068,"coverImage":{"id":"0*Uj_0to4QhiMAEGKG.jpg","originalWidth":590,"originalHeight":372,"isFeatured":true}},"type":"Tag"},{"slug":"react","name":"React","postCount":23863,"metadata":{"postCount":23863,"coverImage":{"id":"1*cW0Pr7SZuyuQT2IDoayrrw.jpeg","originalWidth":3872,"originalHeight":2592,"isFeatured":true}},"type":"Tag"},{"slug":"javascript","name":"JavaScript","postCount":86832,"metadata":{"postCount":86832,"coverImage":{"id":"1*QZppItKE3Sqdi3kZA-TNGQ.png","originalWidth":1490,"originalHeight":828,"isFeatured":true}},"type":"Tag"},{"slug":"tutorial","name":"Tutorial","postCount":13053,"metadata":{"postCount":13053,"coverImage":{"id":"1*9hGvYE5jegHm1r_97gH-jQ.png","isFeatured":true,"alt":"Image result for docker"}},"type":"Tag"}],"socialRecommendsCount":0,"responsesCreatedCount":100,"links":{"entries":[{"url":"http://redux.js.org/","alts":[],"httpStatus":200},{"url":"https://www.learnredux.com/","alts":[],"httpStatus":0},{"url":"https://github.com/stowball/dummys-guide-to-redux-and-thunk-react","alts":[],"httpStatus":200},{"url":"https://github.com/gaearon/redux-thunk","alts":[],"httpStatus":200},{"url":"https://egghead.io/lessons/javascript-redux-avoiding-array-mutations-with-concat-slice-and-spread","alts":[],"httpStatus":200},{"url":"https://egghead.io/courses/getting-started-with-redux","alts":[],"httpStatus":200},{"url":"http://codepen.io/stowball/post/a-dummy-s-guide-to-redux-and-thunk-in-react","alts":[],"httpStatus":200},{"url":"https://developer.mozilla.org/en/docs/Web/API/Fetch_API","alts":[],"httpStatus":200},{"url":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest","alts":[],"httpStatus":200}],"version":"0.3","generatedAt":1493878034745},"isLockedPreviewOnly":false,"takeoverId":"","metaDescription":"","totalClapCount":9364,"sectionCount":1,"readingList":0,"topics":[]},"coverless":true,"slug":"a-dummys-guide-to-redux-and-thunk-in-react","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":true,"allowResponses":true,"importedUrl":"","importedPublishedAt":0,"visibility":0,"uniqueSlug":"a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3","previewContent":{"bodyModel":{"paragraphs":[{"name":"b7a3","type":3,"text":"A Dummy’s Guide to Redux and Thunk in React","markups":[],"alignment":1},{"name":"e080","type":1,"text":"If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully this will help.","markups":[{"type":3,"start":20,"end":39,"href":"http://redux.js.org/","title":"","rel":"","anchorType":0},{"type":3,"start":41,"end":61,"href":"https://egghead.io/courses/getting-started-with-redux","title":"","rel":"","anchorType":0},{"type":3,"start":63,"end":79,"href":"https://www.learnredux.com/","title":"","rel":"","anchorType":0}],"alignment":1}],"sections":[{"startIndex":0}]},"isFullContent":false,"subtitle":"If, like me, you’ve read the Redux docs, watched Dan’s videos, done Wes’ course and still not quite grasped how to use Redux, hopefully…"},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3","approvedHomeCollectionId":"","newsletterId":"","webCanonicalUrl":"https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3","mediumUrl":"https://medium.com/@stowball/a-dummys-guide-to-redux-and-thunk-in-react-d8904a7005d3","migrationId":"","notifyFollowers":true,"notifyTwitter":false,"notifyFacebook":false,"responseHiddenOnParentPostAt":0,"isSeries":false,"isSubscriptionLocked":false,"seriesLastAppendedAt":0,"audioVersionDurationSec":0,"sequenceId":"","isNsfw":false,"isEligibleForRevenue":false,"isBlockedFromHightower":false,"deletedAt":0,"lockedPostSource":0,"hightowerMinimumGuaranteeStartsAt":0,"hightowerMinimumGuaranteeEndsAt":0,"featureLockRequestAcceptedAt":0,"mongerRequestType":1,"layerCake":0,"socialTitle":"","socialDek":"","editorialPreviewTitle":"","editorialPreviewDek":"","curationEligibleAt":0,"type":"Post"},"mentionedUsers":[],"collaborators":[],"collectionUserRelations":[],"mode":null,"references":{"User":{"25659e2d5b2b":{"userId":"25659e2d5b2b","name":"Matt Stow","username":"stowball","createdAt":1414377050931,"imageId":"1*rpFwDleJzuWbAwfIYzOowA.jpeg","backgroundImageId":"","bio":"Lead UX Engineer at @nrl. An author, speaker, artist & open sourcerer http://github.com/stowball . Devoted to #a11y, CSS, #vuejs, alt-rock, Nintendo & Charlie P","twitterScreenName":"stowball","socialStats":{"userId":"25659e2d5b2b","usersFollowedCount":233,"usersFollowedByCount":1430,"type":"SocialStats"},"social":{"userId":"lo_CbkdPPxP3jx4","targetUserId":"25659e2d5b2b","type":"Social"},"facebookAccountId":"","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"type":"User"}},"Social":{"25659e2d5b2b":{"userId":"lo_CbkdPPxP3jx4","targetUserId":"25659e2d5b2b","type":"Social"}},"SocialStats":{"25659e2d5b2b":{"userId":"25659e2d5b2b","usersFollowedCount":233,"usersFollowedByCount":1430,"type":"SocialStats"}}}})
// ]]></script><script id="parsely-cfg" src="//d1z2jf7jlzjs58.cloudfront.net/keys/medium.com/p.js"></script><script type="text/javascript">(function(b,r,a,n,c,h,_,s,d,k){if(!b[n]||!b[n]._q){for(;s<_.length;)c(h,_[s++]);d=r.createElement(a);d.async=1;d.src="https://cdn.branch.io/branch-latest.min.js";k=r.getElementsByTagName(a)[0];k.parentNode.insertBefore(d,k);b[n]=h}})(window,document,"script","branch",function(b,r){b[r]=function(){b._q.push([r,arguments])}},{_q:[],_v:1},"addListener applyCode autoAppIndex banner closeBanner closeJourney creditHistory credits data deepview deepviewCta first getCode init link logout redeem referrals removeListener sendSMS setBranchViewData setIdentity track validateCode trackCommerceEvent logEvent".split(" "), 0); branch.init('key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm', {'no_journeys': true, 'disable_exit_animation': true, 'disable_entry_animation': true, 'tracking_disabled':  false }, function(err, data) {});</script></body></html>