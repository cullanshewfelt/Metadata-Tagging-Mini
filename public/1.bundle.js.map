{"version":3,"file":"1.bundle.js","sources":["webpack:///./src/components/ModalSubComponents/LeftColumn.js"],"sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { showCategories, showInstruments, showKeywords, showRatings, selectHeader} from '../../actions/modalActions';\nimport { showStyles, showTempos, showTextBox, updateData } from '../../actions/modalActions';\n\n// this is a stateless functional component\nconst LeftColumn = (props) => {\n  let { batchesBI, modal, ratings, releasesIA, selectedCategories, selectedCue, selectedLibrary, selectedStyles,\n        showCategories, showInstruments, showKeywords, showRatings, showStyles, showTempos, showTextBox, tempos\n      } = props;\n  // **********************************************************************************************************\n  // CATEGORIES FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowCategories = () => {\n    showCategories(modal);\n  }\n  // **********************************************************************************************************\n  // STYLES FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowStyles = () => {\n    showStyles(modal);\n    if(document.getElementById('search-filter')){\n      document.getElementById('search-filter').value = '';\n    }}\n  // **********************************************************************************************************\n  // INSTRUMENTS FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowInstruments = () => {\n    showInstruments(modal);\n    if(document.getElementById('search-filter')){\n      document.getElementById('search-filter').value = '';\n    }}\n  // **********************************************************************************************************\n  // KEYWORDS FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowKeywords = () => {\n    showKeywords(modal);\n    if(document.getElementById('search-filter')){\n      document.getElementById('search-filter').value = '';\n    }}\n  // **********************************************************************************************************\n  // TEMPOS FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowTempos = () => {\n    showTempos(modal);\n  }\n  // **********************************************************************************************************\n  // RATINGS FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowRating = () => {\n    showRatings(modal);\n  }\n  // **********************************************************************************************************\n  // TEXTBOX FUNCTIONS\n  // **********************************************************************************************************\n  const handleShowTextBox = () => {\n    showTextBox(modal, event.target.getAttribute('texttype'))\n  }\n\n  return(\n    <div className='modal-left-column'>\n      <div className='modal-category'><strong>Catalog Name:</strong> {\n        selectedLibrary.libraryName === 'background-instrumentals'\n          ? 'Background Instrumentals'\n          : selectedLibrary.libraryName === 'independent-artists'\n            ? 'Independent Artists'\n            : null\n      }\n      </div>\n      <div className='modal-category'><strong>Status:</strong> {\n        modal.selectedCue\n          ? modal.selectedCue.cue_status\n          : null\n      }\n      </div>\n      <div className='modal-category-select' onClick={handleShowCategories}><strong>Category:</strong> {\n        modal.selectedCategories\n          ? selectedCategories.filter(category => category.cat_id === modal.selectedCue.cat_id).map(obj => obj.cat_name)\n          : null\n      }\n      </div>\n      <div className='modal-category-select' onClick={handleShowStyles}>\n        <strong>Style: </strong> {\n            selectedStyles\n              ? selectedStyles.filter(style => style.style_id === modal.selectedCue.style_id).map(obj => obj.style_name)\n              : null\n        }\n      </div>\n      <div className='modal-category'>\n        <strong>Composer(s): </strong> {\n          modal.selectedComposer.length === 1\n            ? modal.selectedComposer.map((composer, i) => `${composer.composer_name} (${composer.pro_name}) ${composer.composer_split}%`)\n            : modal.selectedComposer.map((composer, i) => `${composer.composer_name} (${composer.pro_name}) ${composer.composer_split}%  ${String.fromCodePoint(183)} `)\n      }\n      </div>\n      <div className='modal-category'>\n        <strong>Publisher(s): </strong> {\n            modal.selectedComposer.length === 1\n              ? modal.selectedComposer.map((composer, i) => `${composer.publisher_name}  ${composer.composer_split}%`)\n              : modal.selectedComposer.map((composer, i) => `${composer.publisher_name}  ${composer.composer_split}% ${String.fromCodePoint(183)}  `)\n        }\n      </div>\n      <div className='modal-category-select' onClick={handleShowInstruments}>\n        {/* <strong>Instruments: </strong> {modal.selectedCue.cue_instrus} */}\n        <strong>Instruments: </strong> {modal.selectedCue.cue_instrus_edit}\n      </div>\n      <div className='modal-category-select' onClick={handleShowKeywords}>\n        <strong>Keywords: </strong> {modal.selectedCue.cue_desc}\n      </div>\n      <div className='modal-category-select' onClick={handleShowTempos}>\n        <strong>Tempo: </strong> {tempos.filter(tempo => tempo.tempo_id === modal.selectedCue.tempo_id).map(obj => obj.tempo_name)}\n      </div>\n      <div className='modal-category-select' onClick={handleShowRating}>\n        <strong>Rating: </strong> {modal.selectedCue.cue_rating}\n      </div>\n      { selectedLibrary.libraryName === 'background-instrumentals' ?\n      <div>\n        <br/><div className='modal-category-select' onClick={handleShowTextBox} texttype='sounds_like_band_edit'>\n        <strong texttype='sounds_like_band_edit'>Sounds Like Band: </strong> {modal.selectedCue.sounds_like_band_edit}\n      </div>\n      <br/><div className='modal-category-select' onClick={handleShowTextBox} texttype='sounds_like_film_edit'>\n        <strong texttype='sounds_like_film_edit'>Sounds Like Film/TV: </strong> {modal.selectedCue.sounds_like_film_edit}\n      </div>\n      <br/><div className='modal-category-select' onClick={handleShowTextBox} texttype='sounds_like_composer_edit'>\n        <strong texttype='sounds_like_composer_edit'>Sounds Like Composer: </strong> {modal.selectedCue.sounds_like_composer_edit}\n      </div>\n    </div>\n      : null\n    }\n    </div>\n  )}\n\nconst mapStateToProps = (state) => {\n  return {\n    composersIA: state.composersBI,\n    instrumentsIA: state.instrumentsBI,\n    keywordsIA: state.keywordsBI,\n    modal: state.modal,\n    releasesIA: state.releasesIA,\n    ratings: state.ratings,\n    selectedCategories: state.selectedCategories,\n    selectedLibrary: state.selectedLibrary,\n    selectedStyles: state.selectedStyles,\n    styles: state.styles,\n    tempos: state.tempos,\n    tracks: state.tracks\n  }\n}\n\nconst mapDispatchToProps = {\n  selectHeader,\n  showCategories,\n  showInstruments,\n  showKeywords,\n  showRatings,\n  showStyles,\n  showTempos,\n  showTextBox\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftColumn);\n"],"mappings":"AAqJA","sourceRoot":""}